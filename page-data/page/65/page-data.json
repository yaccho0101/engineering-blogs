{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/65","result":{"data":{"allPost":{"edges":[{"node":{"ID":2781,"Title":"Three new winners of Project Jengo, and more defeats for the patent troll","Description":"Announcing three new winners of Project Jengo, and a major case update in our ongoing fight against the patent troll Sable Networks.","PublishedAt":"2023-01-17 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/three-new-winners-of-project-jengo-and-more-defeats-for-the-patent-troll/","SourceName":"Cloudflare"}},{"node":{"ID":2782,"Title":"Explaining anomalies detected by Elastic machine learning","Description":"","PublishedAt":"2023-01-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/explaining-anomalies-detected-by-elastic-machine-learning","SourceName":"Elastic"}},{"node":{"ID":2785,"Title":"3 essential async patterns for building a Python service","Description":"","PublishedAt":"2023-01-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/async-patterns-building-python-service","SourceName":"Elastic"}},{"node":{"ID":2780,"Title":"AWS Week in Review – January 16, 2023","Description":"Today, we celebrate Martin Luther King Jr. Day in the US to honor the late civil rights leader’s life, legacy, and achievements. In this article, Amazon employees share what MLK Day means to them and how diversity makes us stronger. Coming back to our AWS Week in Review—it’s been a busy week! Last Week’s Launches […]","PublishedAt":"2023-01-16 19:11:07+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/aws-week-in-review-january-16-2023/","SourceName":"AWS"}},{"node":{"ID":2779,"Title":"A debugging story: corrupt packets in AF_XDP; a kernel bug or user error?","Description":"A race condition in the virtual ethernet driver of the Linux kernel led to occasional packet content corruptions, which resulted in unwanted packet drops by one of our DDoS mitigation systems. This blogpost describes the thought process and technique we used to debug this complex issue.","PublishedAt":"2023-01-16 13:46:45+00:00","OriginURL":"https://blog.cloudflare.com/a-debugging-story-corrupt-packets-in-af_xdp-kernel-bug-or-user-error/","SourceName":"Cloudflare"}},{"node":{"ID":2775,"Title":"New GitHub CLI extension tools","Description":"Support for GitHub CLI extensions has been expanded with new authorship tools and more ways to discover and install custom commands. Learn how to write powerful extensions in Go and find new commands to install.","PublishedAt":"2023-01-13 17:00:04+00:00","OriginURL":"https://github.blog/2023-01-13-new-github-cli-extension-tools/","SourceName":"GitHub"}},{"node":{"ID":2777,"Title":"Consul Scale Test Report to Observe Gossip Stability","Description":"Our tests show Consul servers remain healthy under all test configurations and that splitting up a large LAN gossip pool cuts the risk of gossip instability.","PublishedAt":"2023-01-13 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/consul-scale-test-report-to-observe-gossip-stability","SourceName":"HashiCorp"}},{"node":{"ID":2778,"Title":"CIO Week 2023の要約","Description":"CloudflareがCIO Weekの中で発表した、企業のITとセキュリティの近代化を支援する、新製品、パートナーシップ、イノベーションのすべてをご紹介します","PublishedAt":"2023-01-13 14:01:00+00:00","OriginURL":"https://blog.cloudflare.com/cio-week-2023-recap-ja-jp/","SourceName":"Cloudflare"}},{"node":{"ID":2768,"Title":"Cloud CNI privately connects your clouds to Cloudflare","Description":"Customers using Google Cloud Platform, Azure, Oracle Cloud, IBM Cloud, and Amazon Web Services can now open direct connections from their private cloud instances into Cloudflare","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/cloud-cni/","SourceName":"Cloudflare"}},{"node":{"ID":2769,"Title":"Cloudflare Zero Trust for managed service providers","Description":"Adding new features to Cloudflare Zero Trust for Managed Service Providers using Gateway DNS.","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/gateway-managed-service-provider/","SourceName":"Cloudflare"}},{"node":{"ID":2770,"Title":"CIO Week 2023 recap","Description":"Learn about all the new products, partnerships, and innovations Cloudflare announced during CIO Week to help organizations modernize their IT and security.","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/cio-week-2023-recap/","SourceName":"Cloudflare"}},{"node":{"ID":2771,"Title":"Give us a ping. (Cloudflare) One ping only","Description":"Now Zero Trust administrators can use the familiar debugging tools that we all know and love like ping, traceroute, and MTR to test connectivity to private network destinations running behind their Tunnels","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/the-most-exciting-ping-release/","SourceName":"Cloudflare"}},{"node":{"ID":2772,"Title":"Cloudflare Application Services for private networks: do more with the tools you already love","Description":"Today, we’re excited to announce new integrations that make it possible to unlock operational and cost efficiencies for IT teams by allowing them to do more with fewer tools, and enable new use cases that are impossible without Cloudflare’s  “every service everywhere” architecture.","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/app-services-private-networks/","SourceName":"Cloudflare"}},{"node":{"ID":2773,"Title":"China Express: Cloudflare partners to boost performance in China for corporate networks","Description":"China Express is a suite of connectivity and performance offerings designed to improve application performance for users in China.","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/china-express/","SourceName":"Cloudflare"}},{"node":{"ID":2774,"Title":"The Overflow #160: Looking back at Hat Cafe 2022","Description":"<p>Data reqs for ML, detonate vs. explode, and the top 100 Pens for 2022.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/13/the-overflow-160-looking-back-at-hat-cafe-2022/\">The Overflow #160: Looking back at Hat Cafe 2022  </a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-13 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/13/the-overflow-160-looking-back-at-hat-cafe-2022/","SourceName":"Stack Overflow"}},{"node":{"ID":2767,"Title":"My First Server and REST API: Essentials for Frontenders","Description":"","PublishedAt":"2023-01-13 12:08:12+00:00","OriginURL":"https://medium.com/miro-engineering/my-first-server-and-rest-api-essentials-for-frontenders-c962a5f7c468?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":2765,"Title":"Commit to something big: all about monorepos (Ep. 527)","Description":"<p>Everything you need to know about monorepos — and the tools to build them.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/13/commit-to-something-big-all-about-monorepos-ep-527/\">Commit to something big: all about monorepos (Ep. 527)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-13 05:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/13/commit-to-something-big-all-about-monorepos-ep-527/","SourceName":"Stack Overflow"}},{"node":{"ID":2764,"Title":"How I treat creative copy like a product—using data","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2023/01/How-I-treat-my-creative-copy-like-a-product—using-data-1024x577.png\" class=\"type:primaryImage\" /></figure>\n<p>We’ve run dozens of customer interviews, analyzed our competitors, tracked our customer lifecycle, and aligned with the company vision: now we&#8217;re finally ready to write copy.&#160; If you think I’m being extreme, just wait until you read the rest of this post. Copywriting, while often thought of as something creative and inspired, is a technical</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/creative-copy-product-data/\">How I treat creative copy like a product—using data</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2023-01-12 18:02:00+00:00","OriginURL":"https://mixpanel.com/blog/creative-copy-product-data/","SourceName":"Mixpanel"}},{"node":{"ID":2762,"Title":"New HCP-Based Global Management Plane for Consul Now in Public Beta","Description":"The new global management plane for Consul is now available as a free public beta. Try it out to gain full visibility for both self-managed and HCP Consul clusters.","PublishedAt":"2023-01-12 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/new-hcp-based-global-management-plane-for-consul-now-in-public-beta","SourceName":"HashiCorp"}},{"node":{"ID":2760,"Title":"New year ushers in new wave of Snyk Technology Alliance Partner Program members","Description":"With the new year, we’re excited to announce the second wave of new companies joining our Snyk Technology Alliance Partner Program (TAPP), which enables application and developer-focused software companies to build, integrate, and go-to-market as quickly as possible with Snyk solutions.","PublishedAt":"2023-01-12 15:30:00+00:00","OriginURL":"https://snyk.io/blog/introducing-snyk-technology-alliance-partner-program-tapp-new-members-2023/","SourceName":"Snyk"}},{"node":{"ID":2759,"Title":"Stack Gives Back 2022!","Description":"<p>Let’s start the year on a high note! We’re excited to announce our 14th Stack Gives Back.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/12/stack-gives-back-2022/\">Stack Gives Back 2022!</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-12 15:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/12/stack-gives-back-2022/","SourceName":"Stack Overflow"}},{"node":{"ID":2753,"Title":"Announcing SCIM support for Cloudflare Access & Gateway","Description":"Cloudflare Access & Gateway now support the System for Cross-domain Identity Management (SCIM) protocol.","PublishedAt":"2023-01-12 14:02:00+00:00","OriginURL":"https://blog.cloudflare.com/access-and-gateway-with-scim/","SourceName":"Cloudflare"}},{"node":{"ID":2754,"Title":"New: Scan Salesforce and Box for security issues","Description":"Cloudflare CASB adds two new SaaS integrations for Salesforce and Box.","PublishedAt":"2023-01-12 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/casb-adds-salesforce-and-box-integrations/","SourceName":"Cloudflare"}},{"node":{"ID":2755,"Title":"API-based email scanning","Description":"Customers can now onboard O365 domains to Area 1, adding more flexibility on deployment methods.","PublishedAt":"2023-01-12 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/api-based-email-scanning/","SourceName":"Cloudflare"}},{"node":{"ID":2756,"Title":"Zone Versioning is now generally available","Description":"Safely configure and deploy updates to zone configuration with Zone Versioning now Generally Available for Enterprise customers","PublishedAt":"2023-01-12 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/zone-versioning-ga/","SourceName":"Cloudflare"}},{"node":{"ID":2757,"Title":"Expanding our Microsoft collaboration: proactive and automated Zero Trust security for customers","Description":"As CIOs navigate the complexities of stitching together multiple solutions, we are extending our collaboration with Microsoft to create one of the best Zero Trust solutions available.","PublishedAt":"2023-01-12 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/expanding-our-collaboration-with-microsoft-proactive-and-automated-zero-trust-security/","SourceName":"Cloudflare"}},{"node":{"ID":2751,"Title":"Three ways Snyk made software supply chains more secure in 2022","Description":"In 2022, Snyk continued to expand on our developer-centric approach to software security, by adding several key enhancements to the existing solutions — let's focus on three key capabilities introduced in the past year that can improve your software supply chain security.","PublishedAt":"2023-01-12 13:00:00+00:00","OriginURL":"https://snyk.io/blog/snyk-software-supply-chain-security-2022-review/","SourceName":"Snyk"}},{"node":{"ID":2758,"Title":"The Elastic Guide to: Distributed Work","Description":"","PublishedAt":"2023-01-12 08:00:00+00:00","OriginURL":"https://www.elastic.co/blog/culture-the-elastic-guide-to-distributed-work","SourceName":"Elastic"}},{"node":{"ID":2750,"Title":"Blog: Protect Your Mission-Critical Pods From Eviction With PriorityClass","Description":"<p><strong>Author:</strong> Sunny Bhambhani (InfraCloud Technologies)</p>\n<p>Kubernetes has been widely adopted, and many organizations use it as their de-facto orchestration engine for running workloads that need to be created and deleted frequently.</p>\n<p>Therefore, proper scheduling of the pods is key to ensuring that application pods are up and running within the Kubernetes cluster without any issues. This article delves into the use cases around resource management by leveraging the <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass\">PriorityClass</a> object to protect mission-critical or high-priority pods from getting evicted and making sure that the application pods are up, running, and serving traffic.</p>\n<h2 id=\"resource-management-in-kubernetes\">Resource management in Kubernetes</h2>\n<p>The control plane consists of multiple components, out of which the scheduler (usually the built-in <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/kube-scheduler/\">kube-scheduler</a>) is one of the components which is responsible for assigning a node to a pod.</p>\n<p>Whenever a pod is created, it enters a &quot;pending&quot; state, after which the scheduler determines which node is best suited for the placement of the new pod.</p>\n<p>In the background, the scheduler runs as an infinite loop looking for pods without a <code>nodeName</code> set that are <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-scheduling-readiness/\">ready for scheduling</a>. For each Pod that needs scheduling, the scheduler tries to decide which node should run that Pod.</p>\n<p>If the scheduler cannot find any node, the pod remains in the pending state, which is not ideal.</p>\n<div class=\"alert alert-info note callout\" role=\"alert\">\n<strong>Note:</strong> To name a few, <code>nodeSelector</code> , <code>taints and tolerations</code> , <code>nodeAffinity</code> , the rank of nodes based on available resources (for example, CPU and memory), and several other criteria are used to determine the pod's placement.\n</div>\n<p>The below diagram, from point number 1 through 4, explains the request flow:</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2023/01/12/protect-mission-critical-pods-priorityclass/kube-scheduler.svg\"\nalt=\"A diagram showing the scheduling of three Pods that a client has directly created.\"/> <figcaption>\n<h4>Scheduling in Kubernetes</h4>\n</figcaption>\n</figure>\n<h2 id=\"typical-use-cases\">Typical use cases</h2>\n<p>Below are some real-life scenarios where control over the scheduling and eviction of pods may be required.</p>\n<ol>\n<li>\n<p>Let's say the pod you plan to deploy is critical, and you have some resource constraints. An example would be the DaemonSet of an infrastructure component like Grafana Loki. The Loki pods must run before other pods can on every node. In such cases, you could ensure resource availability by manually identifying and deleting the pods that are not required or by adding a new node to the cluster. Both these approaches are unsuitable since the former would be tedious to execute, and the latter could involve an expenditure of time and money.</p>\n</li>\n<li>\n<p>Another use case could be a single cluster that holds the pods for the below environments with associated priorities:</p>\n<ul>\n<li>Production (<code>prod</code>): top priority</li>\n<li>Preproduction (<code>preprod</code>): intermediate priority</li>\n<li>Development (<code>dev</code>): least priority</li>\n</ul>\n</li>\n</ol>\n<p>In the event of high resource consumption in the cluster, there is competition for CPU and memory resources on the nodes. While cluster-level autoscaling <em>may</em> add more nodes, it takes time. In the interim, if there are no further nodes to scale the cluster, some Pods could remain in a Pending state, or the service could be degraded as they compete for resources. If the kubelet does evict a Pod from the node, that eviction would be random because the kubelet doesn’t have any special information about which Pods to evict and which to keep.</p>\n<ol start=\"3\">\n<li>A third example could be a microservice backed by a queuing application or a database running into a resource crunch and the queue or database getting evicted. In such a case, all the other services would be rendered useless until the database can serve traffic again.</li>\n</ol>\n<p>There can also be other scenarios where you want to control the order of scheduling or order of eviction of pods.</p>\n<h2 id=\"priorityclasses-in-kubernetes\">PriorityClasses in Kubernetes</h2>\n<p>PriorityClass is a cluster-wide API object in Kubernetes and part of the <code>scheduling.k8s.io/v1</code> API group. It contains a mapping of the PriorityClass name (defined in <code>.metadata.name</code>) and an integer value (defined in <code>.value</code>). This represents the value that the scheduler uses to determine Pod's relative priority.</p>\n<p>Additionally, when you create a cluster using kubeadm or a managed Kubernetes service (for example, Azure Kubernetes Service), Kubernetes uses PriorityClasses to safeguard the pods that are hosted on the control plane nodes. This ensures that critical cluster components such as CoreDNS and kube-proxy can run even if resources are constrained.</p>\n<p>This availability of pods is achieved through the use of a special PriorityClass that ensures the pods are up and running and that the overall cluster is not affected.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get priorityclass\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME VALUE GLOBAL-DEFAULT AGE\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">system-cluster-critical 2000000000 false 82m\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">system-node-critical 2000001000 false 82m\n</span></span></span></code></pre></div><p>The diagram below shows exactly how it works with the help of an example, which will be detailed in the upcoming section.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2023/01/12/protect-mission-critical-pods-priorityclass/decision-tree.svg\"\nalt=\"A flow chart that illustrates how the kube-scheduler prioritizes new Pods and potentially preempts existing Pods\"/> <figcaption>\n<h4>Pod scheduling and preemption</h4>\n</figcaption>\n</figure>\n<h3 id=\"pod-priority-and-preemption\">Pod priority and preemption</h3>\n<p><a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#preemption\">Pod preemption</a> is a Kubernetes feature that allows the cluster to preempt pods (removing an existing Pod in favor of a new Pod) on the basis of priority. <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority\">Pod priority</a> indicates the importance of a pod relative to other pods while scheduling. If there aren't enough resources to run all the current pods, the scheduler tries to evict lower-priority pods over high-priority ones.</p>\n<p>Also, when a healthy cluster experiences a node failure, typically, lower-priority pods get preempted to create room for higher-priority pods on the available node. This happens even if the cluster can bring up a new node automatically since pod creation is usually much faster than bringing up a new node.</p>\n<h3 id=\"priorityclass-requirements\">PriorityClass requirements</h3>\n<p>Before you set up PriorityClasses, there are a few things to consider.</p>\n<ol>\n<li>Decide which PriorityClasses are needed. For instance, based on environment, type of pods, type of applications, etc.</li>\n<li>The default PriorityClass resource for your cluster. The pods without a <code>priorityClassName</code> will be treated as priority 0.</li>\n<li>Use a consistent naming convention for all PriorityClasses.</li>\n<li>Make sure that the pods for your workloads are running with the right PriorityClass.</li>\n</ol>\n<h2 id=\"priorityclass-hands-on-example\">PriorityClass hands-on example</h2>\n<p>Let’s say there are 3 application pods: one for prod, one for preprod, and one for development. Below are three sample YAML manifest files for each of those.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#080;font-style:italic\"># development</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>dev-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">env</span>:<span style=\"color:#bbb\"> </span>dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>dev-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;256Mi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;0.2&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">limits</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;.5Gi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;0.5&#34;</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#080;font-style:italic\"># preproduction</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>preprod-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">env</span>:<span style=\"color:#bbb\"> </span>preprod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>preprod-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;1.5Gi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;1.5&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">limits</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2Gi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2&#34;</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#080;font-style:italic\"># production</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>prod-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">env</span>:<span style=\"color:#bbb\"> </span>prod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>prod-nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2Gi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">limits</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">memory</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2Gi&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">cpu</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;2&#34;</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>You can create these pods with the <code>kubectl create -f &lt;FILE.yaml&gt;</code> command, and then check their status\nusing the <code>kubectl get pods</code> command. You can see if they are up and look ready to serve traffic:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get pods --show-labels\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME READY STATUS RESTARTS AGE LABELS\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">dev-nginx 1/1 Running 0 55s env=dev\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">preprod-nginx 1/1 Running 0 55s env=preprod\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">prod-nginx 0/1 Pending 0 55s env=prod\n</span></span></span></code></pre></div><p>Bad news. The pod for the Production environment is still Pending and isn't serving any traffic.</p>\n<p>Let's see why this is happening:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get events\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">...\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">...\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">5s Warning FailedScheduling pod/prod-nginx 0/2 nodes are available: 1 Insufficient cpu, 2 Insufficient memory.\n</span></span></span></code></pre></div><p>In this example, there is only one worker node, and that node has a resource crunch.</p>\n<p>Now, let's look at how PriorityClass can help in this situation since prod should be given higher priority than the other environments.</p>\n<h2 id=\"priorityclass-api\">PriorityClass API</h2>\n<p>Before creating PriorityClasses based on these requirements, let's see what a basic manifest for a PriorityClass looks like and outline some prerequisites:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>scheduling.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PriorityClass<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>PRIORITYCLASS_NAME<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">0</span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># any integer value between -1000000000 to 1000000000 </span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">description</span>:<span style=\"color:#bbb\"> </span>&gt;-<span style=\"color:#b44;font-style:italic\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> </span><span style=\"color:#bbb\"> </span>(Optional) description goes here!<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">globalDefault</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">false</span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># or true. Only one PriorityClass can be the global default.</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Below are some prerequisites for PriorityClasses:</p>\n<ul>\n<li>The name of a PriorityClass must be a valid DNS subdomain name.</li>\n<li>When you make your own PriorityClass, the name should not start with <code>system-</code>, as those names are\nreserved by Kubernetes itself (for example, they are used for two built-in PriorityClasses).</li>\n<li>Its absolute value should be between -1000000000 to 1000000000 (1 billion).</li>\n<li>Larger numbers are reserved by PriorityClasses such as <code>system-cluster-critical</code>\n(this Pod is critically important to the cluster) and <code>system-node-critical</code> (the node\ncritically relies on this Pod).\n<code>system-node-critical</code> is a higher priority than <code>system-cluster-critical</code>, because a\ncluster-critical Pod can only work well if the node where it is running has all its node-level\ncritical requirements met.</li>\n<li>There are two optional fields:\n<ul>\n<li><code>globalDefault</code>: When true, this PriorityClass is used for pods where a <code>priorityClassName</code> is not specified.\nOnly one PriorityClass with <code>globalDefault</code> set to true can exist in a cluster.<br>\nIf there is no PriorityClass defined with globalDefault set to true, all the pods with no priorityClassName defined will be treated with 0 priority (i.e. the least priority).</li>\n<li><code>description</code>: A string with a meaningful value so that people know when to use this PriorityClass.</li>\n</ul>\n</li>\n</ul>\n<div class=\"alert alert-info note callout\" role=\"alert\">\n<strong>Note:</strong> Adding a PriorityClass with <code>globalDefault</code> set to <code>true</code> does not mean it will apply the same to the existing pods that are already running. This will be applicable only to the pods that came into existence after the PriorityClass was created.\n</div>\n<h3 id=\"priorityclass-in-action\">PriorityClass in action</h3>\n<p>Here's an example. Next, create some environment-specific PriorityClasses:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>scheduling.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PriorityClass<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>dev-pc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1000000</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">globalDefault</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">false</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">description</span>:<span style=\"color:#bbb\"> </span>&gt;-<span style=\"color:#b44;font-style:italic\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> </span><span style=\"color:#bbb\"> </span>(Optional) This priority class should only be used for all development pods.<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>scheduling.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PriorityClass<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>preprod-pc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">2000000</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">globalDefault</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">false</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">description</span>:<span style=\"color:#bbb\"> </span>&gt;-<span style=\"color:#b44;font-style:italic\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> </span><span style=\"color:#bbb\"> </span>(Optional) This priority class should only be used for all preprod pods.<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>scheduling.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PriorityClass<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>prod-pc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">4000000</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">globalDefault</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">false</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">description</span>:<span style=\"color:#bbb\"> </span>&gt;-<span style=\"color:#b44;font-style:italic\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> </span><span style=\"color:#bbb\"> </span>(Optional) This priority class should only be used for all prod pods.<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Use <code>kubectl create -f &lt;FILE.YAML&gt;</code> command to create a pc and <code>kubectl get pc</code> to check its status.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get pc\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME VALUE GLOBAL-DEFAULT AGE\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">dev-pc 1000000 false 3m13s\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">preprod-pc 2000000 false 2m3s\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">prod-pc 4000000 false 7s\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">system-cluster-critical 2000000000 false 82m\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">system-node-critical 2000001000 false 82m\n</span></span></span></code></pre></div><p>The new PriorityClasses are in place now. A small change is needed in the pod manifest or pod template (in a ReplicaSet or Deployment). In other words, you need to specify the priority class name at <code>.spec.priorityClassName</code> (which is a string value).</p>\n<p>First update the previous production pod manifest file to have a PriorityClass assigned, then delete the Production pod and recreate it. You can't edit the priority class for a Pod that already exists.</p>\n<p>In my cluster, when I tried this, here's what happened.\nFirst, that change seems successful; the status of pods has been updated:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get pods --show-labels\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME READY STATUS RESTARTS AGE LABELS\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">dev-nginx 1/1 Terminating 0 55s env=dev\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">preprod-nginx 1/1 Running 0 55s env=preprod\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">prod-nginx 0/1 Pending 0 55s env=prod\n</span></span></span></code></pre></div><p>The dev-nginx pod is getting terminated. Once that is successfully terminated and there are enough resources for the prod pod, the control plane can schedule the prod pod:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#888\">Warning FailedScheduling pod/prod-nginx 0/2 nodes are available: 1 Insufficient cpu, 2 Insufficient memory.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Preempted pod/dev-nginx by default/prod-nginx on node node01\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Killing pod/dev-nginx Stopping container dev-nginx\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Scheduled pod/prod-nginx Successfully assigned default/prod-nginx to node01\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Pulling pod/prod-nginx Pulling image &#34;nginx&#34;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Pulled pod/prod-nginx Successfully pulled image &#34;nginx&#34;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Created pod/prod-nginx Created container prod-nginx\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">Normal Started pod/prod-nginx Started container prod-nginx\n</span></span></span></code></pre></div><h2 id=\"enforcement\">Enforcement</h2>\n<p>When you set up PriorityClasses, they exist just how you defined them. However, people\n(and tools) that make changes to your cluster are free to set any PriorityClass, or to not\nset any PriorityClass at all.\nHowever, you can use other Kubernetes features to make sure that the priorities you wanted\nare actually applied.</p>\n<p>As an alpha feature, you can define a <a href=\"https://kubernetes.io/blog/2022/12/20/validating-admission-policies-alpha/\">ValidatingAdmissionPolicy</a> and a ValidatingAdmissionPolicyBinding so that, for example,\nPods that go into the <code>prod</code> namespace must use the <code>prod-pc</code> PriorityClass.\nWith another ValidatingAdmissionPolicyBinding you ensure that the <code>preprod</code> namespace\nuses the <code>preprod-pc</code> PriorityClass, and so on.\nIn <em>any</em> cluster, you can enforce similar controls using external projects such as\n<a href=\"https://kyverno.io/\">Kyverno</a> or <a href=\"https://open-policy-agent.github.io/gatekeeper/\">Gatekeeper</a>,\nthrough validating admission webhooks.</p>\n<p>However you do it, Kubernetes gives you options to make sure that the PriorityClasses are\nused how you wanted them to be, or perhaps just to\n<a href=\"https://open-policy-agent.github.io/gatekeeper/website/docs/violations/#warn-enforcement-action\">warn</a>\nusers when they pick an unsuitable option.</p>\n<h2 id=\"summary\">Summary</h2>\n<p>The above example and its events show you what this feature of Kubernetes brings to the table, along with several scenarios where you can use this feature. To reiterate, this helps ensure that mission-critical pods are up and available to serve the traffic and, in the case of a resource crunch, determines cluster behavior.</p>\n<p>It gives you some power to decide the order of scheduling and order of <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#preemption\">preemption</a> for Pods. Therefore, you need to define the PriorityClasses sensibly.\nFor example, if you have a cluster autoscaler to add nodes on demand,\nmake sure to run it with the <code>system-cluster-critical</code> PriorityClass. You don't want to\nget in a situation where the autoscaler has been preempted and there are no new nodes\ncoming online.</p>\n<p>If you have any queries or feedback, feel free to reach out to me on <a href=\"http://www.linkedin.com/in/sunnybhambhani\">LinkedIn</a>.</p>","PublishedAt":"2023-01-12 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/01/12/protect-mission-critical-pods-priorityclass/","SourceName":"Kubernetes"}},{"node":{"ID":2752,"Title":"Elastic joins AWS Marketplace Vendor Insights to streamline risk assessment and software procurement","Description":"","PublishedAt":"2023-01-12 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/elastic-joins-aws-marketplace-vendor-insights","SourceName":"Elastic"}}]}},"pageContext":{"limit":30,"skip":1920,"numPages":158,"currentPage":65}},"staticQueryHashes":["3649515864"]}