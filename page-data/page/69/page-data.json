{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/69","result":{"data":{"allPost":{"edges":[{"node":{"ID":2661,"Title":"How to build a secure API gateway in Node.js","Description":"In this article, we’ll build a secure API gateway from scratch using only Node.js and a couple of open source packages. All you need is basic knowledge of your terminal, Node.js version 14 or later, and JavaScript.","PublishedAt":"2022-12-28 15:00:00+00:00","OriginURL":"https://snyk.io/blog/how-to-build-secure-api-gateway-node-js/","SourceName":"Snyk"}},{"node":{"ID":2660,"Title":"Evernote’s Parade of Features, Part Five: Improve Workflow on the Web","Description":"<p>In the final installment of this features series, learn how to improve your Evernote workflow while using the web version of our platform.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/improve-workflow-on-web/\">Evernote&#8217;s Parade of Features, Part Five: Improve Workflow on the Web</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2022-12-28 14:30:00+00:00","OriginURL":"https://evernote.com/blog/improve-workflow-on-web/","SourceName":"Evernote"}},{"node":{"ID":2659,"Title":"The Great Resignation is here. What does that mean for developers?","Description":"<p>Nearly two years into the pandemic, many Americans are reevaluating their relationship with work.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/28/the-great-resignation-is-here-what-does-that-mean-for-developers/\">The Great Resignation is here. What does that mean for developers?</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-28 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/28/the-great-resignation-is-here-what-does-that-mean-for-developers/","SourceName":"Stack Overflow"}},{"node":{"ID":2662,"Title":"Service-Specific and Other Supplemental Terms","Description":"Capitalized terms not otherwise defined in these Terms will have the respective meanings assigned to them in the Master Subscription Agreement at https://www.datadoghq.com/legal/msa/ (the &ldquo;MSA&rdquo;). Datadog may modify these Terms from time to time, subject to Section 30 of the MSA.These Terms are in addition to the MSA, the Free-Trial Terms at https://www.datadoghq.com/legal/free-trial-agreement/, the Pass-Through Terms of Use at https://www.datadoghq.com/legal/pass-through/ and any separately executed agreement for Services between Datadog and Customer (each, as applicable, the &ldquo;Agreement&rdquo;).","PublishedAt":"2022-12-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/legal/service-terms/2022-12-28/","SourceName":"Datadog"}},{"node":{"ID":2663,"Title":"Applicant and Candidate Privacy Notice","Description":"At Datadog, we care about your privacy. That’s why every candidate for employment with us receives this notice, which explains what information Datadog (“we,” “us,” “our”) collects about you during our hiring process, why we collect and how we use your information, and what your rights are related to your information. Please note that your use of any Datadog service or website is also governed by our general Privacy Policy.","PublishedAt":"2022-12-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/legal/applicant-candidate-privacy/2022-12-28/","SourceName":"Datadog"}},{"node":{"ID":2667,"Title":"Vendor Travel and Expense Policy","Description":"Datadog will only be responsible for reasonable expenses (such as travel, lodging, and meals) in accordance with Datadog’s travel and expense policy, and in connection with a duly executed agreement between Vendor and Datadog.Transportation and lodging shall be booked through a TripActions link that Datadog will provide. Transportation and lodging shall only be booked after an agreement between Vendor and Datadog is executed.All reimbursable expenses must be itemized with copies of all receipts.","PublishedAt":"2022-12-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/legal/vendor-travel-policy/2022-12-28/","SourceName":"Datadog"}},{"node":{"ID":2658,"Title":"5 “no experience needed” tips for building secure applications","Description":"Learn about the developer security tooling from Snyk that will help you level up your skills to find and fix security vulnerabilities in the code you write and the dependencies you use so you can build secure applications.","PublishedAt":"2022-12-27 16:21:01+00:00","OriginURL":"https://snyk.io/blog/no-experience-needed-secure-applications/","SourceName":"Snyk"}},{"node":{"ID":2656,"Title":"Picture perfect images with the modern <img> element","Description":"<p>You may not think about images as part of your web dev work, but they can affect your web app's performance more than any other part of your code. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/27/picture-perfect-images-with-the-modern-element/\">Picture perfect images with the modern &lt;img&gt; element</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-27 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/27/picture-perfect-images-with-the-modern-element/","SourceName":"Stack Overflow"}},{"node":{"ID":2655,"Title":"Blog: Kubernetes v1.26: CPUManager goes GA","Description":"<p><strong>Author:</strong>\nFrancesco Romani (Red Hat)</p>\n<p>The CPU Manager is a part of the kubelet, the Kubernetes node agent, which enables the user to allocate exclusive CPUs to containers.\nSince Kubernetes v1.10, where it <a href=\"https://kubernetes.io/blog/2018/07/24/feature-highlight-cpu-manager/\">graduated to Beta</a>, the CPU Manager proved itself reliable and\nfulfilled its role of allocating exclusive CPUs to containers, so adoption has steadily grown making it a staple component of performance-critical\nand low-latency setups. Over time, most changes were about bugfixes or internal refactoring, with the following noteworthy user-visible changes:</p>\n<ul>\n<li><a href=\"https://github.com/Kubernetes/Kubernetes/pull/83592\">support explicit reservation of CPUs</a>: it was already possible to request to reserve a given\nnumber of CPUs for system resources, including the kubelet itself, which will not be used for exclusive CPU allocation. Now it is possible to also\nexplicitly select which CPUs to reserve instead of letting the kubelet pick them up automatically.</li>\n<li><a href=\"https://github.com/Kubernetes/Kubernetes/pull/97415\">report the exclusively allocated CPUs</a> to containers, much like is already done for devices,\nusing the kubelet-local <a href=\"https://kubernetes.io/docs/concepts/extend-Kubernetes/compute-storage-net/device-plugins/#monitoring-device-plugin-resources\">PodResources API</a>.</li>\n<li><a href=\"https://github.com/Kubernetes/Kubernetes/pull/101771\">optimize the usage of system resources</a>, eliminating unnecessary sysfs changes.</li>\n</ul>\n<p>The CPU Manager reached the point on which it &quot;just works&quot;, so in Kubernetes v1.26 it has graduated to generally available (GA).</p>\n<h2 id=\"cpu-managed-customization\">Customization options for CPU Manager</h2>\n<p>The CPU Manager supports two operation modes, configured using its <em>policies</em>. With the <code>none</code> policy, the CPU Manager allocates CPUs to containers\nwithout any specific constraint except the (optional) quota set in the Pod spec.\nWith the <code>static</code> policy, then provided that the pod is in the Guaranteed QoS class and every container in that Pod requests an integer amount of vCPU cores,\nthen the CPU Manager allocates CPUs exclusively. Exclusive assignment means that other containers (whether from the same Pod, or from a different Pod) do not\nget scheduled onto that CPU.</p>\n<p>This simple operational model served the user base pretty well, but as the CPU Manager matured more and more, users started to look at more elaborate use\ncases and how to better support them.</p>\n<p>Rather than add more policies, the community realized that pretty much all the novel use cases are some variation of the behavior enabled by the <code>static</code>\nCPU Manager policy. Hence, it was decided to add <a href=\"https://github.com/Kubernetes/enhancements/tree/master/keps/sig-node/2625-cpumanager-policies-thread-placement#proposed-change\">options to tune the behavior of the static policy</a>.\nThe options have a varying degree of maturity, like any other Kubernetes feature, and in order to be accepted, each new option provides a backward\ncompatible behavior when disabled, and to document how to interact with each other, should they interact at all.</p>\n<p>This enabled the Kubernetes project to graduate to GA the CPU Manager core component and core CPU allocation algorithms to GA,\nwhile also enabling a new age of experimentation in this area.\nIn Kubernetes v1.26, the CPU Manager supports <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies.md#static-policy-options\">three different policy options</a>:</p>\n<dl>\n<dt><code>full-pcpus-only</code></dt>\n<dd>restrict the CPU Manager core allocation algorithm to full physical cores only, reducing noisy neighbor issues from hardware technologies that allow sharing cores.</dd>\n<dt><code>distribute-cpus-across-numa</code></dt>\n<dd>drive the CPU Manager to evenly distribute CPUs across NUMA nodes, for cases where more than one NUMA node is required to satisfy the allocation.</dd>\n<dt><code>align-by-socket</code></dt>\n<dd>change how the CPU Manager allocates CPUs to a container: consider CPUs to be aligned at the socket boundary, instead of NUMA node boundary.</dd>\n</dl>\n<h2 id=\"further-development\">Further development</h2>\n<p>After graduating the main CPU Manager feature, each existing policy option will follow their graduation process, independent from CPU Manager and from each other option.\nThere is room for new options to be added, but there's also a growing demand for even more flexibility than what the CPU Manager, and its policy options, currently grant.</p>\n<p>Conversations are in progress in the community about splitting the CPU Manager and the other resource managers currently part of the kubelet executable\ninto pluggable, independent kubelet plugins. If you are interested in this effort, please join the conversation on SIG Node communication channels (Slack, mailing list, weekly meeting).</p>\n<h2 id=\"further-reading\">Further reading</h2>\n<p>Please check out the <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/\">Control CPU Management Policies on the Node</a>\ntask page to learn more about the CPU Manager, and how it fits in relation to the other node-level resource managers.</p>\n<h2 id=\"getting-involved\">Getting involved</h2>\n<p>This feature is driven by the <a href=\"https://github.com/Kubernetes/community/blob/master/sig-node/README.md\">SIG Node</a> community.\nPlease join us to connect with the community and share your ideas and feedback around the above feature and\nbeyond. We look forward to hearing from you!</p>","PublishedAt":"2022-12-27 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/27/cpumanager-ga/","SourceName":"Kubernetes"}},{"node":{"ID":2657,"Title":"Perf8: Performance metrics for Python","Description":"","PublishedAt":"2022-12-27 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/perf8-performance-metrics-for-python","SourceName":"Elastic"}},{"node":{"ID":2653,"Title":"Supply-Chain Security: Evaluation of Threats and Mitigations","Description":"<p>This article is a translation of the Japanese article published on December 15th, 2022. Abstract This blog details our research into attacks and mitigations related to supply chain security, and more practical applications of supply chain security. In our research, we took an approach that leveraged a more concretely defined pipeline model than existing frameworks [&hellip;]</p>\n","PublishedAt":"2022-12-26 17:00:02+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221215-supplychain-security-reevaluation/","SourceName":"Mercari"}},{"node":{"ID":2654,"Title":"Why the number input is the worst input","Description":"<p>Think that web form has got your number? If you used input type=\"number\", you may be surprised to find that it doesn't. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/26/why-the-number-input-is-the-worst-input/\">Why the number input is the worst input</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-26 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/26/why-the-number-input-is-the-worst-input/","SourceName":"Stack Overflow"}},{"node":{"ID":2652,"Title":"Our journey of upgrading the Lookup codebase to React 18","Description":"","PublishedAt":"2022-12-26 07:30:18+00:00","OriginURL":"https://medium.com/engineering-housing/our-journey-of-upgrading-the-lookup-codebase-to-react-18-d2a4e2d7eb29?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":2649,"Title":"Data Deduplication","Description":"","PublishedAt":"2022-12-26 07:26:30+00:00","OriginURL":"https://medium.com/engineering-housing/account-deduplication-d3126aa3355c?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":2650,"Title":"Establishing robust communication between Micro-services","Description":"","PublishedAt":"2022-12-26 07:21:30+00:00","OriginURL":"https://medium.com/engineering-housing/establishing-robust-communication-between-micro-services-c47337c7ca78?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":2651,"Title":"Hybrid test framework for Java applications","Description":"","PublishedAt":"2022-12-26 07:13:51+00:00","OriginURL":"https://medium.com/engineering-housing/hybrid-test-framework-for-java-applications-71f0a7b42548?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":2648,"Title":"Blog: Kubernetes 1.26: Pod Scheduling Readiness","Description":"<p><strong>Author:</strong> Wei Huang (Apple), Abdullah Gharaibeh (Google)</p>\n<p>Kubernetes 1.26 introduced a new Pod feature: <em>scheduling gates</em>. In Kubernetes, scheduling gates\nare keys that tell the scheduler when a Pod is ready to be considered for scheduling.</p>\n<h2 id=\"what-problem-does-it-solve\">What problem does it solve?</h2>\n<p>When a Pod is created, the scheduler will continuously attempt to find a node that fits it. This\ninfinite loop continues until the scheduler either finds a node for the Pod, or the Pod gets deleted.</p>\n<p>Pods that remain unschedulable for long periods of time (e.g., ones that are blocked on some external event)\nwaste scheduling cycles. A scheduling cycle may take ≅20ms or more depending on the complexity of\nthe Pod's scheduling constraints. Therefore, at scale, those wasted cycles significantly impact the\nscheduler's performance. See the arrows in the &quot;scheduler&quot; box below.</p>\n<figure>\n<div class=\"mermaid\">\ngraph LR;\npod((New Pod))-->queue\nsubgraph Scheduler\nqueue(scheduler queue)\nsched_cycle[/scheduling cycle/]\nschedulable{schedulable?}\nqueue==>|Pop out|sched_cycle\nsched_cycle==>schedulable\nschedulable==>|No|queue\nsubgraph note [Cycles wasted on keep rescheduling 'unready' Pods]\nend\nend\nclassDef plain fill:#ddd,stroke:#fff,stroke-width:1px,color:#000;\nclassDef k8s fill:#326ce5,stroke:#fff,stroke-width:1px,color:#fff;\nclassDef Scheduler fill:#fff,stroke:#bbb,stroke-width:2px,color:#326ce5;\nclassDef note fill:#edf2ae,stroke:#fff,stroke-width:1px;\nclass queue,sched_cycle,schedulable k8s;\nclass pod plain;\nclass note note;\nclass Scheduler Scheduler;\n</div>\n</figure>\n<noscript>\n<div class=\"alert alert-secondary callout\" role=\"alert\">\n<em class=\"javascript-required\">JavaScript must be <a href=\"https://www.enable-javascript.com/\">enabled</a> to view this content</em>\n</div>\n</noscript>\n<p>Scheduling gates helps address this problem. It allows declaring that newly created Pods are not\nready for scheduling. When scheduling gates are present on a Pod, the scheduler ignores the Pod\nand therefore saves unnecessary scheduling attempts. Those Pods will also be ignored by Cluster\nAutoscaler if you have it installed in the cluster.</p>\n<p>Clearing the gates is the responsibility of external controllers with knowledge of when the Pod\nshould be considered for scheduling (e.g., a quota manager).</p>\n<figure>\n<div class=\"mermaid\">\ngraph LR;\npod((New Pod))-->queue\nsubgraph Scheduler\nqueue(scheduler queue)\nsched_cycle[/scheduling cycle/]\nschedulable{schedulable?}\npopout{Pop out?}\nqueue==>|PreEnqueue check|popout\npopout-->|Yes|sched_cycle\npopout==>|No|queue\nsched_cycle-->schedulable\nschedulable-->|No|queue\nsubgraph note [A knob to gate Pod's scheduling]\nend\nend\nclassDef plain fill:#ddd,stroke:#fff,stroke-width:1px,color:#000;\nclassDef k8s fill:#326ce5,stroke:#fff,stroke-width:1px,color:#fff;\nclassDef Scheduler fill:#fff,stroke:#bbb,stroke-width:2px,color:#326ce5;\nclassDef note fill:#edf2ae,stroke:#fff,stroke-width:1px;\nclassDef popout fill:#f96,stroke:#fff,stroke-width:1px;\nclass queue,sched_cycle,schedulable k8s;\nclass pod plain;\nclass note note;\nclass popout popout;\nclass Scheduler Scheduler;\n</div>\n</figure>\n<noscript>\n<div class=\"alert alert-secondary callout\" role=\"alert\">\n<em class=\"javascript-required\">JavaScript must be <a href=\"https://www.enable-javascript.com/\">enabled</a> to view this content</em>\n</div>\n</noscript>\n<h2 id=\"how-does-it-work\">How does it work?</h2>\n<p>Scheduling gates in general works very similar to Finalizers. Pods with a non-empty\n<code>spec.schedulingGates</code> field will show as status <code>SchedulingGated</code> and be blocked from\nscheduling. Note that more than one gate can be added, but they all should be added upon Pod\ncreation (e.g., you can add them as part of the spec or via a mutating webhook).</p>\n<pre tabindex=\"0\"><code>NAME READY STATUS RESTARTS AGE\ntest-pod 0/1 SchedulingGated 0 10s\n</code></pre><p>To clear the gates, you update the Pod by removing all of the items from the Pod's <code>schedulingGates</code>\nfield. The gates do not need to be removed all at once, but only when all the gates are removed the\nscheduler will start to consider the Pod for scheduling.</p>\n<p>Under the hood, scheduling gates are implemented as a PreEnqueue scheduler plugin, a new scheduler\nframework extension point that is invoked at the beginning of each scheduling cycle.</p>\n<h2 id=\"use-cases\">Use Cases</h2>\n<p>An important use case this feature enables is dynamic quota management. Kubernetes supports\n<a href=\"https://kubernetes.io/docs/concepts/policy/resource-quotas/\">ResourceQuota</a>, however the API Server enforces quota at\nthe time you attempt Pod creation. For example, if a new Pod exceeds the CPU quota, it gets rejected.\nThe API Server doesn't queue the Pod; therefore, whoever created the Pod needs to continuously attempt\nto recreate it again. This either means a delay between resources becoming available and the Pod\nactually running, or it means load on the API server and Scheduler due to constant attempts.</p>\n<p>Scheduling gates allows an external quota manager to address the above limitation of ResourceQuota.\nSpecifically, the manager could add a <code>example.com/quota-check</code> scheduling gate to all Pods created in the\ncluster (using a mutating webhook). The manager would then remove the gate when there is quota to\nstart the Pod.</p>\n<h2 id=\"whats-next\">Whats next?</h2>\n<p>To use this feature, the <code>PodSchedulingReadiness</code> feature gate must be enabled in the API Server\nand scheduler. You're more than welcome to test it out and tell us (SIG Scheduling) what you think!</p>\n<h2 id=\"additional-resources\">Additional resources</h2>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-scheduling-readiness/\">Pod Scheduling Readiness</a>\nin the Kubernetes documentation</li>\n<li><a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-scheduling/3521-pod-scheduling-readiness/README.md\">Kubernetes Enhancement Proposal</a></li>\n</ul>","PublishedAt":"2022-12-26 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/26/pod-scheduling-readiness-alpha/","SourceName":"Kubernetes"}},{"node":{"ID":2647,"Title":"Look back of Mercari Engineering 2022","Description":"<p>Hi this is @yasu_shiwaku from the Engineering Office. This is the last article for Mercari Advent Calendar 2022. As introduced in the Advent Calendar up to today, Mercari Engineering Organization was taking on many projects in 2022. Mercari Shops, the B2C marketplace platform operated by the subsidiary company Souzoh, has reached its 1st anniversary from [&hellip;]</p>\n","PublishedAt":"2022-12-25 11:00:07+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221225-mercari-engineering-lookback-2022/","SourceName":"Mercari"}},{"node":{"ID":2646,"Title":"A brief story about the rotation program and my role in it","Description":"<p>This post is for Day 24 of Merpay Advent Calendar 2022, brought to you by @ntk1000 from the Merpay Trust &amp; Safety(TnS) Platform. I’m working as an Engineering Manager at Merpay, in charge of the Trust &amp; Safety(TnS) Platform team. I joined Merpay in 2019, Dec., and I’ve been in charge of multiple backend teams [&hellip;]</p>\n","PublishedAt":"2022-12-24 12:00:20+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221222-a-brief-story-about-the-rotation-program-and-my-role-in-it/","SourceName":"Mercari"}},{"node":{"ID":2644,"Title":"Working in a cross functional team","Description":"<p>Hello, I am Deepak Bhatt, and I work as a Backend Engineer in the New Lister Conversion Team. This post is for Day 24 of Mercari Advent Calendar 2022. My team is a cross functional product team consisting of engineers, designers, product managers and data analysts. We work together to help users list more items [&hellip;]</p>\n","PublishedAt":"2022-12-24 10:00:59+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221223-working-in-a-cross-functional-team/","SourceName":"Mercari"}},{"node":{"ID":2645,"Title":"Customer Inquiry Routing Algorithm","Description":"<p>Every month we receive hundreds of thousands of inquiries from our customers spanning hundreds of categories. To help our customers resolve their problems, we use a routing algorithm to route each inquiry to a suitable customer support agent among hundreds of agents. What does such a routing algorithm look like? This post is for Day [&hellip;]</p>\n","PublishedAt":"2022-12-24 10:00:10+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221223-customer-inquiry-routing-algorithm/","SourceName":"Mercari"}},{"node":{"ID":2642,"Title":"Fraud, How do we handle it ?","Description":"<p>This post is for Day 24 of Merpay Advent Calendar 2022, brought to you by codechaitu from Merpay TnS Team. Handling millions of user transactions and providing the best service is a tough job because of the fraudulent activities.So today let’s see how in merpay we handle fraud situations and how we are working towards [&hellip;]</p>\n","PublishedAt":"2022-12-24 01:00:36+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221222-fraud-how-do-we-handle-it/","SourceName":"Mercari"}},{"node":{"ID":2643,"Title":"What&#8217;s with all the ducks?","Description":"What in the world do rubber ducks have to do with programming? And why were they everywhere at GitHub Universe? A lot of you asked, so I’m here to help explain. ","PublishedAt":"2022-12-23 17:00:11+00:00","OriginURL":"https://github.blog/2022-12-23-whats-with-all-the-ducks/","SourceName":"GitHub"}},{"node":{"ID":2640,"Title":"The Overflow #157: Tis the season for hats","Description":"<p>Headless eCommerce, violins on Mars, and fixing the naming problem</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/23/the-overflow-157-tis-the-season-for-hats/\">The Overflow #157: Tis the season for hats</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-23 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/23/the-overflow-157-tis-the-season-for-hats/","SourceName":"Stack Overflow"}},{"node":{"ID":2641,"Title":"The three top-paying tech roles in 2022 and the skills you need to land them","Description":"<p>Looking for the skills that pay the bills? Skillsoft ran a survey to find out the highest-paying roles and the skills they require. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/23/the-three-top-paying-tech-roles-in-2022-and-the-skills-you-need-to-land-them/\">The three top-paying tech roles in 2022 and the skills you need to land them</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-23 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/23/the-three-top-paying-tech-roles-in-2022-and-the-skills-you-need-to-land-them/","SourceName":"Stack Overflow"}},{"node":{"ID":2637,"Title":"Introducing Swift Concurrency to Merpay code","Description":"<p>This post is for Day 23 of Merpay Advent Calendar 2022, brought to you by takeshi from Merpay iOS Team. Introduction Since Swift 5.5 was released in 2021, we are able to use Swift Concurrency. Swift Concurrency prevents your code from data races and provides a simple way to implement async code. It is big [&hellip;]</p>\n","PublishedAt":"2022-12-23 12:00:59+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221223-introducing-swift-concurrency-to-merpay-code/","SourceName":"Mercari"}},{"node":{"ID":2638,"Title":"Showcasing “DevDojo,” a Series of Mercari-Developed Learning Content for Engineering","Description":"<p>Hello, everyone! My name is @aisaka from the Engineering Office. This post is for day 23 of Mercari Advent Calendar 2022. In the Mercari Engineering Division, we aim to be an organization where we can all learn from each other, where we can be self-starters, and where we can continuously grow both professionally and personally. [&hellip;]</p>\n","PublishedAt":"2022-12-23 10:52:04+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221223-showcasing-devdojo-a-series-of-mercari-developed-learning-content-for-engineering/","SourceName":"Mercari"}},{"node":{"ID":2636,"Title":"Blog: Kubernetes 1.26: Support for Passing Pod fsGroup to CSI Drivers At Mount Time","Description":"<p><strong>Authors:</strong> Fabio Bertinatto (Red Hat), Hemant Kumar (Red Hat)</p>\n<p>Delegation of <code>fsGroup</code> to CSI drivers was first introduced as alpha in Kubernetes 1.22,\nand graduated to beta in Kubernetes 1.25.\nFor Kubernetes 1.26, we are happy to announce that this feature has graduated to\nGeneral Availability (GA).</p>\n<p>In this release, if you specify a <code>fsGroup</code> in the\n<a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\">security context</a>,\nfor a (Linux) Pod, all processes in the pod's containers are part of the additional group\nthat you specified.</p>\n<p>In previous Kubernetes releases, the kubelet would <em>always</em> apply the\n<code>fsGroup</code> ownership and permission changes to files in the volume according to the policy\nyou specified in the Pod's <code>.spec.securityContext.fsGroupChangePolicy</code> field.</p>\n<p>Starting with Kubernetes 1.26, CSI drivers have the option to apply the <code>fsGroup</code> settings during\nvolume mount time, which frees the kubelet from changing the permissions of files and directories\nin those volumes.</p>\n<h2 id=\"how-does-it-work\">How does it work?</h2>\n<p>CSI drivers that support this feature should advertise the\n<a href=\"https://github.com/container-storage-interface/spec/blob/master/spec.md#nodegetcapabilities\"><code>VOLUME_MOUNT_GROUP</code></a> node capability.</p>\n<p>After recognizing this information, the kubelet passes the <code>fsGroup</code> information to\nthe CSI driver during pod startup. This is done through the\n<a href=\"https://github.com/container-storage-interface/spec/blob/v1.7.0/spec.md#nodestagevolume\"><code>NodeStageVolumeRequest</code></a> and\n<a href=\"https://github.com/container-storage-interface/spec/blob/v1.7.0/spec.md#nodepublishvolume\"><code>NodePublishVolumeRequest</code></a>\nCSI calls.</p>\n<p>Consequently, the CSI driver is expected to apply the <code>fsGroup</code> to the files in the volume using a\n<em>mount option</em>. As an example, <a href=\"https://github.com/kubernetes-sigs/azurefile-csi-driver\">Azure File CSIDriver</a> utilizes the <code>gid</code> mount option to map\nthe <code>fsGroup</code> information to all the files in the volume.</p>\n<p>It should be noted that in the example above the kubelet refrains from directly\napplying the permission changes into the files and directories in that volume files.\nAdditionally, two policy definitions no longer have an effect: neither\n<code>.spec.fsGroupPolicy</code> for the CSIDriver object, nor\n<code>.spec.securityContext.fsGroupChangePolicy</code> for the Pod.</p>\n<p>For more details about the inner workings of this feature, check out the\n<a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-storage/2317-fsgroup-on-mount/\">enhancement proposal</a>\nand the <a href=\"https://kubernetes-csi.github.io/docs/support-fsgroup.html\">CSI Driver <code>fsGroup</code> Support</a>\nin the CSI developer documentation.</p>\n<h2 id=\"why-is-it-important\">Why is it important?</h2>\n<p>Without this feature, applying the fsGroup information to files is not possible in certain storage environments.</p>\n<p>For instance, Azure File does not support a concept of POSIX-style ownership and permissions\nof files. The CSI driver is only able to set the file permissions at the volume level.</p>\n<h2 id=\"how-do-i-use-it\">How do I use it?</h2>\n<p>This feature should be mostly transparent to users. If you maintain a CSI driver that should\nsupport this feature, read\n<a href=\"https://kubernetes-csi.github.io/docs/support-fsgroup.html\">CSI Driver <code>fsGroup</code> Support</a>\nfor more information on how to support this feature in your CSI driver.</p>\n<p>Existing CSI drivers that do not support this feature will continue to work as usual:\nthey will not receive any <code>fsGroup</code> information from the kubelet. In addition to that,\nthe kubelet will continue to perform the ownership and permissions changes to files\nfor those volumes, according to the policies specified in <code>.spec.fsGroupPolicy</code> for the\nCSIDriver and <code>.spec.securityContext.fsGroupChangePolicy</code> for the relevant Pod.</p>","PublishedAt":"2022-12-23 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/23/kubernetes-12-06-fsgroup-on-mount/","SourceName":"Kubernetes"}},{"node":{"ID":2639,"Title":"Best practices for continuous testing with Datadog","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/best-practices-datadog-continuous-testing/datadog-continuous-testing-hero.png\" width=\"100%\"/>In Parts 1 and 2, we looked at how you can build and maintain effective test suites. These steps are a key part of ensuring that application workflows function as expected. But how you run your tests is another important point to consider, so in this post, we&rsquo;ll walk through best practices for executing your tests across every stage of development. Along the way, we&rsquo;ll also look at how Datadog supports these practices for the applications that you are already monitoring.","PublishedAt":"2022-12-23 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/best-practices-datadog-continuous-testing/","SourceName":"Datadog"}},{"node":{"ID":2635,"Title":"HashiCorp Ambassador Call for Submissions 2023","Description":"The submission window for HashiCorp Ambassador — our program to recognize individuals for knowledge sharing, mentorship, and kindness in the community — is now open.","PublishedAt":"2022-12-22 16:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-ambassador-call-for-submissions-2023","SourceName":"HashiCorp"}}]}},"pageContext":{"limit":30,"skip":2040,"numPages":158,"currentPage":69}},"staticQueryHashes":["3649515864"]}