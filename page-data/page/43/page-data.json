{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/43","result":{"data":{"allPost":{"edges":[{"node":{"ID":3436,"Title":"Introducing Communities on Teams: where domain, practice, and community come together with purpose","Description":"<p>Communities on Teams is a new way to bring people and knowledge together within a specific topic or focus to share valuable resources and collaborate in meaningful ways.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/18/introducing-communities-on-teams-where-domain-practice-and-community-come-together-with-purpose/\">Introducing Communities on Teams: where domain, practice, and community come together with purpose</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-18 13:05:08+00:00","OriginURL":"https://stackoverflow.blog/2023/04/18/introducing-communities-on-teams-where-domain-practice-and-community-come-together-with-purpose/","SourceName":"Stack Overflow"}},{"node":{"ID":3432,"Title":"Consent management made easy and clear with Cloudflare Zaraz","Description":"Cloudflare Zaraz now can also help you with gathering and managing consent. With this new tool, you can easily collect user’s consent preferences on your website, using a consent modal, and apply your consent policy on third-party tools you load via Cloudflare Zaraz","PublishedAt":"2023-04-18 13:01:00+00:00","OriginURL":"https://blog.cloudflare.com/consent-manager/","SourceName":"Cloudflare"}},{"node":{"ID":3550,"Title":"Consent management made easy and clear with Cloudflare Zaraz","Description":"Cloudflare Zaraz now can also help you with gathering and managing consent. With this new tool, you can easily collect user’s consent preferences on your website, using a consent modal, and apply your consent policy on third-party tools you load via Cloudflare Zaraz","PublishedAt":"2023-04-18 13:01:00+00:00","OriginURL":"http://blog.cloudflare.com/consent-manager/","SourceName":"Cloudflare"}},{"node":{"ID":3433,"Title":"Measuring network quality to better understand the end-user experience","Description":"Starting today, you don’t have to be a network engineer to figure out what your Internet is good for. Let’s tell you how we’re doing it.","PublishedAt":"2023-04-18 13:00:00+00:00","OriginURL":"https://blog.cloudflare.com/aim-database-for-internet-quality/","SourceName":"Cloudflare"}},{"node":{"ID":3434,"Title":"Making home Internet faster has little to do with “speed”","Description":"The speed of an Internet connection is more about decreasing real-world latency than adding underutilized bandwidth","PublishedAt":"2023-04-18 13:00:00+00:00","OriginURL":"https://blog.cloudflare.com/making-home-internet-faster/","SourceName":"Cloudflare"}},{"node":{"ID":3551,"Title":"Making home Internet faster has little to do with “speed”","Description":"The speed of an Internet connection is more about decreasing real-world latency than adding underutilized bandwidth","PublishedAt":"2023-04-18 13:00:00+00:00","OriginURL":"http://blog.cloudflare.com/making-home-internet-faster/","SourceName":"Cloudflare"}},{"node":{"ID":3552,"Title":"Measuring network quality to better understand the end-user experience","Description":"Starting today, you don’t have to be a network engineer to figure out what your Internet is good for. Let’s tell you how we’re doing it.","PublishedAt":"2023-04-18 13:00:00+00:00","OriginURL":"http://blog.cloudflare.com/aim-database-for-internet-quality/","SourceName":"Cloudflare"}},{"node":{"ID":3431,"Title":"Audio Accessibility in Miro: A Hackathon Story in 3 Acts","Description":"","PublishedAt":"2023-04-18 07:27:26+00:00","OriginURL":"https://medium.com/miro-engineering/audio-accessibility-in-miro-a-hackathon-story-in-3-acts-c65e31e10de1?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":3429,"Title":"Elastic Common Schema and OpenTelemetry — A path to better observability and security with no vendor lock-in","Description":"","PublishedAt":"2023-04-18 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/ecs-elastic-common-schema-otel-opentelemetry-faq","SourceName":"Elastic"}},{"node":{"ID":3430,"Title":"Elastic contributes Elastic Common Schema (ECS) to OpenTelemetry (OTel), helping accelerate adoption of OTel-based observability and security","Description":"","PublishedAt":"2023-04-18 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/ecs-elastic-common-schema-otel-opentelemetry-announcement","SourceName":"Elastic"}},{"node":{"ID":3437,"Title":"Automate common security tasks and stay ahead of threats with Datadog Workflows and Cloud SIEM","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/automate-security-tasks-with-workflows-and-cloud-siem/hero-r2.png\" width=\"100%\"/>Detecting and remediating security threats is a constantly evolving concern for modern DevSecOps and security operations center (SOC) teams. Moreover, manually investigating and responding to vulnerabilities and threats is time-consuming, laborious, and knowledge-intensive. Datadog Workflows, which is now available in the Service Management and Integrations menus, can be used in concert with Cloud SIEM to automate repetitive security tasks—such as triaging security signals or detecting emerging vulnerabilities.Using Datadog Cloud SIEM and Workflows together reduces the burden on security engineers, allowing them to focus on more complex tasks, and helps teams stay ahead of novel threats by automating the classification of emerging vulnerabilities.","PublishedAt":"2023-04-18 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/automate-security-tasks-with-workflows-and-cloud-siem/","SourceName":"Datadog"}},{"node":{"ID":3441,"Title":"Proactively track, triage, and assign issues with Datadog Case Management","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/track-issues-datadog-case-management/case-management_feature-announcement.png\" width=\"100%\"/>Complex systems require many different monitors to assess the health of their infrastructure and applications, creating a wealth of alerts that can be hard to track. Due to a lack of effective triage processes, many organizations page engineers for every alert that comes in, making it difficult to separate false positives from issues that actually require immediate attention. In an ideal system, on-call engineers would be paged only for major incidents, and issues that don’t have any urgent customer impact could be left to longer-term investigations.","PublishedAt":"2023-04-18 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/track-issues-datadog-case-management/","SourceName":"Datadog"}},{"node":{"ID":3428,"Title":"AWS Week in Review: New Service for Generative AI and Amazon EC2 Trn1n, Inf2, and CodeWhisperer now GA – April 17, 2023","Description":"I could almost title this blog post the “AWS AI/ML Week in Review.” This past week, we announced several new innovations and tools for building with generative AI on AWS. Let’s dive right into it. Last Week’s Launches Here are some launches that got my attention during the previous week: Announcing Amazon Bedrock and Amazon […]","PublishedAt":"2023-04-17 19:12:09+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/aws-week-in-review-new-service-for-generative-ai-and-amazon-ec2-trn1n-inf2-and-codewhisperer-now-ga-april-17-2023/","SourceName":"AWS"}},{"node":{"ID":3423,"Title":"A fine-grained network traffic analysis with Millisampler","Description":"<p>What the research is:  Millisampler is one of Meta’s latest characterization tools and allows us to observe, characterize, and debug network performance at high-granularity timescales efficiently. This lightweight network traffic characterization tool for continual monitoring operates at fine, configurable timescales. It collects time series of ingress and egress traffic volumes, number of active flows, incoming [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2023/04/17/networking-traffic/millisampler-network-traffic-analysis/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2023/04/17/networking-traffic/millisampler-network-traffic-analysis/\">A fine-grained network traffic analysis with Millisampler</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n","PublishedAt":"2023-04-17 16:15:48+00:00","OriginURL":"https://engineering.fb.com/2023/04/17/networking-traffic/millisampler-network-traffic-analysis/","SourceName":"Facebook"}},{"node":{"ID":3469,"Title":"Organizing a Successful Internal Hackathon: Mercari Hack Fest Spring 2023","Description":"<p>Hello! I am afroscript from the Mercari Engineering Office. Since September 2019, Mercari has been regularly organizing a biannual internal technology festival for its engineers called “Hack Fest.” We are currently in the process of preparing the 7th Hack Fest, which will take place from April 19 to April 21, 2023. We have been gradually [&hellip;]</p>\n","PublishedAt":"2023-04-17 16:00:22+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20230410-b286fe9577/","SourceName":"Mercari"}},{"node":{"ID":3426,"Title":"Community is the future of AI","Description":"<p>To keep knowledge open and accessible to all, we must come together to build the future of AI.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/17/community-is-the-future-of-ai/\">Community is the future of AI</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-17 15:00:42+00:00","OriginURL":"https://stackoverflow.blog/2023/04/17/community-is-the-future-of-ai/","SourceName":"Stack Overflow"}},{"node":{"ID":3425,"Title":"Preventing insecure deserialization in Node.js","Description":"This article demonstrates how to patch deserialization vulnerabilities in Node.js. We’ll create vulnerable code, demonstrate an attack, and then fix the vulnerabilities.","PublishedAt":"2023-04-17 14:00:00+00:00","OriginURL":"https://snyk.io/blog/preventing-insecure-deserialization-node-js","SourceName":"Snyk"}},{"node":{"ID":3470,"Title":"Model management for client side ML powered by Firebase","Description":"<p>Hi everyone! I am Rakesh from the Mercari’s Seller Engagement team. Recently I had the opportunity to mentor an Intern at Mercari. His name is Priyansh and this article summarizes part of his work on using Firebase for client side machine learning models. Introduction The availability of huge data, advances in powerful processing and storage, [&hellip;]</p>\n","PublishedAt":"2023-04-17 13:00:42+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20230417-model-management-for-client-side-ml-powered-by-firebase/","SourceName":"Mercari"}},{"node":{"ID":3419,"Title":"Blog: Kubernetes 1.27: More fine-grained pod topology spread policies reached beta","Description":"<p><strong>Authors:</strong> <a href=\"https://github.com/denkensk\">Alex Wang</a> (Shopee), <a href=\"https://github.com/kerthcet\">Kante Yin</a> (DaoCloud), <a href=\"https://github.com/sanposhiho\">Kensei Nakada</a> (Mercari)</p>\n<p>In Kubernetes v1.19, <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\">Pod topology spread constraints</a>\nwent to general availability (GA).</p>\n<p>As time passed, we - SIG Scheduling - received feedback from users,\nand, as a result, we're actively working on improving the Topology Spread feature via three KEPs.\nAll of these features have reached beta in Kubernetes v1.27 and are enabled by default.</p>\n<p>This blog post introduces each feature and the use case behind each of them.</p>\n<h2 id=\"kep-3022-min-domains-in-pod-topology-spread\">KEP-3022: min domains in Pod Topology Spread</h2>\n<p>Pod Topology Spread has the <code>maxSkew</code> parameter to define the degree to which Pods may be unevenly distributed.</p>\n<p>But, there wasn't a way to control the number of domains over which we should spread.\nSome users want to force spreading Pods over a minimum number of domains, and if there aren't enough already present, make the cluster-autoscaler provision them.</p>\n<p>Kubernetes v1.24 introduced the <code>minDomains</code> parameter for pod topology spread constraints,\nas an alpha feature.\nVia <code>minDomains</code> parameter, you can define the minimum number of domains.</p>\n<p>For example, assume there are 3 Nodes with the enough capacity,\nand a newly created ReplicaSet has the following <code>topologySpreadConstraints</code> in its Pod template.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">...</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">topologySpreadConstraints</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span>- <span style=\"color:#008000;font-weight:bold\">maxSkew</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">minDomains</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">5</span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># requires 5 Nodes at least (because each Node has a unique hostname).</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">whenUnsatisfiable</span>:<span style=\"color:#bbb\"> </span>DoNotSchedule<span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># minDomains is valid only when DoNotSchedule is used.</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">topologyKey</span>:<span style=\"color:#bbb\"> </span>kubernetes.io/hostname<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labelSelector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchLabels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">foo</span>:<span style=\"color:#bbb\"> </span>bar<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>In this case, 3 Pods will be scheduled to those 3 Nodes,\nbut other 2 Pods from this replicaset will be unschedulable until more Nodes join the cluster.</p>\n<p>You can imagine that the cluster autoscaler provisions new Nodes based on these unschedulable Pods,\nand as a result, the replicas are finally spread over 5 Nodes.</p>\n<h2 id=\"kep-3094-take-taints-tolerations-into-consideration-when-calculating-podtopologyspread-skew\">KEP-3094: Take taints/tolerations into consideration when calculating podTopologySpread skew</h2>\n<p>Before this enhancement, when you deploy a pod with <code>podTopologySpread</code> configured, kube-scheduler would\ntake the Nodes that satisfy the Pod's nodeAffinity and nodeSelector into consideration\nin filtering and scoring, but would not care about whether the node taints are tolerated by the incoming pod or not.\nThis may lead to a node with untolerated taint as the only candidate for spreading, and as a result,\nthe pod will stuck in Pending if it doesn't tolerate the taint.</p>\n<p>To allow more fine-gained decisions about which Nodes to account for when calculating spreading skew,\nKubernetes 1.25 introduced two new fields within <code>topologySpreadConstraints</code> to define node inclusion policies:\n<code>nodeAffinityPolicy</code> and <code>nodeTaintPolicy</code>.</p>\n<p>A manifest that applies these policies looks like the following:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>example-pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># Configure a topology spread constraint</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">topologySpreadConstraints</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">maxSkew</span>:<span style=\"color:#bbb\"> </span>&lt;integer&gt;<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># ...</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">nodeAffinityPolicy</span>:<span style=\"color:#bbb\"> </span>[Honor|Ignore]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">nodeTaintsPolicy</span>:<span style=\"color:#bbb\"> </span>[Honor|Ignore]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># other Pod fields go here</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>The <code>nodeAffinityPolicy</code> field indicates how Kubernetes treats a Pod's <code>nodeAffinity</code> or <code>nodeSelector</code> for\npod topology spreading.\nIf <code>Honor</code>, kube-scheduler filters out nodes not matching <code>nodeAffinity</code>/<code>nodeSelector</code> in the calculation of\nspreading skew.\nIf <code>Ignore</code>, all nodes will be included, regardless of whether they match the Pod's <code>nodeAffinity</code>/<code>nodeSelector</code>\nor not.</p>\n<p>For backwards compatibility, <code>nodeAffinityPolicy</code> defaults to <code>Honor</code>.</p>\n<p>The <code>nodeTaintsPolicy</code> field defines how Kubernetes considers node taints for pod topology spreading.\nIf <code>Honor</code>, only tainted nodes for which the incoming pod has a toleration, will be included in the calculation of spreading skew.\nIf <code>Ignore</code>, kube-scheduler will not consider the node taints at all in the calculation of spreading skew, so a node with\npod untolerated taint will also be included.</p>\n<p>For backwards compatibility, <code>nodeTaintsPolicy</code> defaults to <code>Ignore</code>.</p>\n<p>The feature was introduced in v1.25 as alpha. By default, it was disabled, so if you want to use this feature in v1.25,\nyou had to explictly enable the feature gate <code>NodeInclusionPolicyInPodTopologySpread</code>. In the following v1.26\nrelease, that associated feature graduated to beta and is enabled by default.</p>\n<h2 id=\"kep-3243-respect-pod-topology-spread-after-rolling-upgrades\">KEP-3243: Respect Pod topology spread after rolling upgrades</h2>\n<p>Pod Topology Spread uses the field <code>labelSelector</code> to identify the group of pods over which\nspreading will be calculated. When using topology spreading with Deployments, it is common\npractice to use the <code>labelSelector</code> of the Deployment as the <code>labelSelector</code> in the topology\nspread constraints. However, this implies that all pods of a Deployment are part of the spreading\ncalculation, regardless of whether they belong to different revisions. As a result, when a new revision\nis rolled out, spreading will apply across pods from both the old and new ReplicaSets, and so by the\ntime the new ReplicaSet is completely rolled out and the old one is rolled back, the actual spreading\nwe are left with may not match expectations because the deleted pods from the older ReplicaSet will cause\nskewed distribution for the remaining pods. To avoid this problem, in the past users needed to add a\nrevision label to Deployment and update it manually at each rolling upgrade (both the label on the\npod template and the <code>labelSelector</code> in the <code>topologySpreadConstraints</code>).</p>\n<p>To solve this problem with a simpler API, Kubernetes v1.25 introduced a new field named\n<code>matchLabelKeys</code> to <code>topologySpreadConstraints</code>. <code>matchLabelKeys</code> is a list of pod label keys to select\nthe pods over which spreading will be calculated. The keys are used to lookup values from the labels of\nthe Pod being scheduled, those key-value labels are ANDed with <code>labelSelector</code> to select the group of\nexisting pods over which spreading will be calculated for the incoming pod.</p>\n<p>With <code>matchLabelKeys</code>, you don't need to update the <code>pod.spec</code> between different revisions.\nThe controller or operator managing rollouts just needs to set different values to the same label key for different revisions.\nThe scheduler will assume the values automatically based on <code>matchLabelKeys</code>.\nFor example, if you are configuring a Deployment, you can use the label keyed with\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#pod-template-hash-label\">pod-template-hash</a>,\nwhich is added automatically by the Deployment controller, to distinguish between different\nrevisions in a single Deployment.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">topologySpreadConstraints</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">maxSkew</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">topologyKey</span>:<span style=\"color:#bbb\"> </span>kubernetes.io/hostname<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">whenUnsatisfiable</span>:<span style=\"color:#bbb\"> </span>DoNotSchedule<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labelSelector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchLabels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">app</span>:<span style=\"color:#bbb\"> </span>foo<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchLabelKeys</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- pod-template-hash<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"getting-involved\">Getting involved</h2>\n<p>These features are managed by Kubernetes <a href=\"https://github.com/kubernetes/community/tree/master/sig-scheduling\">SIG Scheduling</a>.</p>\n<p>Please join us and share your feedback. We look forward to hearing from you!</p>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/\">Pod Topology Spread Constraints</a> in the Kubernetes documentation</li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/3022-min-domains-in-pod-topology-spread\">KEP-3022: min domains in Pod Topology Spread</a></li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/3094-pod-topology-spread-considering-taints\">KEP-3094: Take taints/tolerations into consideration when calculating PodTopologySpread skew</a></li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/3243-respect-pod-topology-spread-after-rolling-upgrades\">KEP-3243: Respect PodTopologySpread after rolling upgrades</a></li>\n</ul>","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/04/17/fine-grained-pod-topology-spread-features-beta/","SourceName":"Kubernetes"}},{"node":{"ID":3420,"Title":"Making Fetch Happen - Building a General-purpose Query & Render Scheduler","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/engineering/making-fetch-happen-building-a-general-purpose-query-and-render-scheduler/making-fetch-happen-building-a-general-purpose-query-and-render-scheduler.png\" width=\"100%\"/>Users expect web applications to be fast and responsive, with smooth scrolling and almost instantaneous rendering. Combining complex UI interactions with frequent data fetching, as many Datadog products do, makes optimizing for good runtime performance a challenge. Dashboards in particular is difficult as, unlike other products, users have complete control over the size of their boards and the complexity of their queries.This post describes how we developed a new query and render scheduler, conceived initially to optimize Dashboard performance but then generalized for use on any expensive task or fetch-heavy application.","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/engineering/making-fetch-happen-building-a-general-purpose-query-and-render-scheduler/","SourceName":"Datadog"}},{"node":{"ID":3421,"Title":"Driving intelligence analysis through a transparent and collaborative approach","Description":"","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/intelligence-analysis-transparent-collaborative-approach","SourceName":"Elastic"}},{"node":{"ID":3422,"Title":"Flightwatching helps carriers reduce CO2 emissions and save over $100K per aircraft per year, with Elastic","Description":"","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/flightwatching-helps-carriers-with-elastic","SourceName":"Elastic"}},{"node":{"ID":3424,"Title":"Datadog acquires Codiga","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/datadog-acquires-codiga/codiga-hero.png\" width=\"100%\"/>Developers spend over a third of their time fixing bad code and reducing technical debt. Detecting and fixing errors in production is not only more costly than doing so during development but also slows down innovation and has a negative impact on productivity, the development experience, and team morale. Having tools that help catch and fix coding mistakes earlier in the development process creates a better experience and increased productivity. We are pleased to announce that Codiga—which provides powerful static code analysis that works across the development lifecycle—is joining Datadog.","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/datadog-acquires-codiga/","SourceName":"Datadog"}},{"node":{"ID":3427,"Title":"How to migrate from OpenSearch to Elastic Cloud","Description":"","PublishedAt":"2023-04-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-to-migrate-from-opensearch-to-elastic-cloud","SourceName":"Elastic"}},{"node":{"ID":3415,"Title":"3 benefits of migrating and consolidating your source code","Description":"Explore how migrating your source code and collaboration history to GitHub can lead to some surprising benefits.","PublishedAt":"2023-04-14 17:48:51+00:00","OriginURL":"https://github.blog/2023-04-14-3-benefits-of-migrating-and-consolidating-your-source-code/","SourceName":"GitHub"}},{"node":{"ID":3417,"Title":"Using the OAuth 2 token exchange standard for managing the identity platform resources","Description":"<p>This article was written as &quot;Series: The Present and Future of the RFS Project for Strengthening the Technical Infrastructure&quot;. In today’s article, we will discuss how the Mercari ID platform team applied the OAuth 2.0 token exchange industry standard for its internal use. Introduction In the Mercari architecture, the business services are supported by various [&hellip;]</p>\n","PublishedAt":"2023-04-14 15:44:17+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20230414-using-the-oauth-2-token-exchange-standard-for-managing-the-identity-platform-resources/","SourceName":"Mercari"}},{"node":{"ID":3414,"Title":"How generative AI is changing the way developers work","Description":"Rapid advancements in generative AI coding tools like GitHub Copilot are accelerating the next wave of software development. Here’s what you need to know. ","PublishedAt":"2023-04-14 15:15:50+00:00","OriginURL":"https://github.blog/2023-04-14-how-generative-ai-is-changing-the-way-developers-work/","SourceName":"GitHub"}},{"node":{"ID":3413,"Title":"The Overflow #173: From Smalltalk to smart contracts","Description":"<p>The people affected by the layoffs, SQL instead of releases, and CSS creator speaks</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/14/the-overflow-173-from-smalltalk-to-smart-contracts/\">The Overflow #173: From Smalltalk to smart contracts</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-14 12:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/04/14/the-overflow-173-from-smalltalk-to-smart-contracts/","SourceName":"Stack Overflow"}},{"node":{"ID":3416,"Title":"Developer-centric DAST with Bright Security","Description":"In this article, we’ll show how developer-centric DAST tools can help organizations improve security testing coverage and build more secure applications.","PublishedAt":"2023-04-14 05:00:00+00:00","OriginURL":"https://snyk.io/blog/developer-centric-dast-bright-security","SourceName":"Snyk"}},{"node":{"ID":3410,"Title":"The philosopher who believes in Web Assembly","Description":"<p>For this episode, we talked with Matt Butcher, CEO at Fermyon Technologies, about distributed computing, the long-term promise of WebAssembly, and the HR mix-up that switched his career from lawn care to computer programming. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/14/the-philosopher-who-believes-in-web-assembly/\">The philosopher who believes in Web Assembly</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-14 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/04/14/the-philosopher-who-believes-in-web-assembly/","SourceName":"Stack Overflow"}}]}},"pageContext":{"limit":30,"skip":1260,"numPages":158,"currentPage":43}},"staticQueryHashes":["3649515864"]}