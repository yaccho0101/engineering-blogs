{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/68","result":{"data":{"allPost":{"edges":[{"node":{"ID":2796,"Title":"Datadog at AWS SKO 2023","Description":"","PublishedAt":"2023-01-05 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/event/micro-awssko-2023/","SourceName":"Datadog"}},{"node":{"ID":2690,"Title":"GitHub Availability Report: December 2022","Description":"In December, we did not experience any incidents that resulted in degraded performance across GitHub services. This report sheds light into an incident that impacted customers using GitHub Packages and GitHub Pages in November.","PublishedAt":"2023-01-04 17:20:40+00:00","OriginURL":"https://github.blog/2023-01-04-github-availability-report-december-2022/","SourceName":"GitHub"}},{"node":{"ID":2691,"Title":"Creating AWS security efficiencies in IT","Description":"In this post, we'll discuss several steps that your teams can take to create AWS efficiencies and streamline cloud security. ","PublishedAt":"2023-01-04 17:16:17+00:00","OriginURL":"https://snyk.io/blog/creating-aws-security-efficiencies/","SourceName":"Snyk"}},{"node":{"ID":2689,"Title":"How to Become a Developer Advocate: Part 1, Public Speaking","Description":"This is the first installment in a series of blog posts on how to build the skills needed to become a developer advocate (or similar technical roles). This post focuses on public speaking. ","PublishedAt":"2023-01-04 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/how-to-become-a-developer-advocate-part-1-public-speaking","SourceName":"HashiCorp"}},{"node":{"ID":2687,"Title":"The future of software engineering is powered by AIOps and open source","Description":"<p>Hear how Intuit is using AI to help its dev teams ship faster. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/the-future-of-software-engineering-is-powered-by-aiops-and-open-source/\">The future of software engineering is powered by AIOps and open source</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 15:58:28+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/the-future-of-software-engineering-is-powered-by-aiops-and-open-source/","SourceName":"Stack Overflow"}},{"node":{"ID":2685,"Title":"Getting your data in shape for machine learning","Description":"<p>Machine learning uses data structures that don't always resemble the ones used in standard computing. You'll need to process your data first if you want efficient machine learning. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/getting-your-data-in-shape-for-machine-learning/\">Getting your data in shape for machine learning</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 15:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/getting-your-data-in-shape-for-machine-learning/","SourceName":"Stack Overflow"}},{"node":{"ID":2686,"Title":"Better developer experience through AI and open source","Description":"<p>This podcast series explores how the company is using AI and open source to let their engineers build better software faster. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/better-developer-experience-through-ai-and-open-source/\">Better developer experience through AI and open source</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 14:44:24+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/better-developer-experience-through-ai-and-open-source/","SourceName":"Stack Overflow"}},{"node":{"ID":2683,"Title":"How Cloudflare can help stop malware before it reaches your app","Description":"Today, we’re making the job of application security teams easier, by providing a content scanning engine integrated with our Web Application Firewall (WAF), so that malicious files being uploaded by end users, never reach origin servers in the first place","PublishedAt":"2023-01-04 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/waf-content-scanning/","SourceName":"Cloudflare"}},{"node":{"ID":2682,"Title":"Price Transparency: Putting the customer first in B2B software","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2023/01/Mixpanel_TransparentPricing_Blog-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>Customer Focus is one of our core cultural values at Mixpanel. We respect our customers’ time and strive to make buying software as seamless and frictionless as subscribing to your favorite music streaming service. That’s why we’ve made all of Mixpanel’s plans available for purchase online with our pricing clearly listed on our website. This</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/mixpanel-pricing-transparency-all-plans-available-for-purchase/\">Price Transparency: Putting the customer first in B2B software</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2023-01-04 13:00:00+00:00","OriginURL":"https://mixpanel.com/blog/mixpanel-pricing-transparency-all-plans-available-for-purchase/","SourceName":"Mixpanel"}},{"node":{"ID":2684,"Title":"4 resolutions for state & local government leaders to reduce tool sprawl in 2023","Description":"","PublishedAt":"2023-01-04 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/4-resolutions-for-state-local-government-leaders-to-reduce-tool-sprawl-in-2023","SourceName":"Elastic"}},{"node":{"ID":2688,"Title":"How governments can generate mainframe savings and delight users by \"freeing their data\"","Description":"","PublishedAt":"2023-01-04 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-governments-generate-mainframe-savings-delight-users-freeing-their-data","SourceName":"Elastic"}},{"node":{"ID":2681,"Title":"A New Phase in the History of Evernote","Description":"<p>Luca Ferrari, CEO of Bending Spoons, discusses his company's acquisition of Evernote and shares his vision for the future.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/new-phase-in-evernote-history/\">A New Phase in the History of Evernote</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2023-01-03 22:44:06+00:00","OriginURL":"https://evernote.com/blog/new-phase-in-evernote-history/","SourceName":"Evernote"}},{"node":{"ID":2677,"Title":"How a Visual Goal Tracker Helps You Keep Your Eye on the Prize","Description":"<p>We live in a world filled with distractions. Whether it’s the latest streaming series or drama on the internet, getting sidetracked from working on your goals is easy—even for people who are disciplined enough to write them down in the first place. And while you may think you’re strong enough to resist, diversion will never be more than a cellphone screen away. That’s where a visual goal tracker comes in</p>\n<p><a class=\"continue-reading\" href=\"https://evernote.com/blog/visual-goal-tracker/\">Continue reading...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/visual-goal-tracker/\">How a Visual Goal Tracker Helps You Keep Your Eye on the Prize</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2023-01-03 14:30:00+00:00","OriginURL":"https://evernote.com/blog/visual-goal-tracker/","SourceName":"Evernote"}},{"node":{"ID":2675,"Title":"From life without parole to startup CTO (Ep. 522)","Description":"<p>Ever wondered what it's like learning to code from an XML file of raw Stack Overflow data?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/03/jessica-hicklin-unlocked-labs-overflow-offline/\">From life without parole to startup CTO (Ep. 522)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-03 05:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/03/jessica-hicklin-unlocked-labs-overflow-offline/","SourceName":"Stack Overflow"}},{"node":{"ID":2676,"Title":"What Have I Even Been Doing Today?","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2023-01-03-engineer-to-manager-three-mindset-shifts/","SourceName":"Trivago"}},{"node":{"ID":2678,"Title":"How to put your untapped data to work to transform your business","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-to-put-your-untapped-data-to-work-to-transform-your-business","SourceName":"Elastic"}},{"node":{"ID":2679,"Title":"Identify and resolve incidents faster with InsightFinder’s offering in the Datadog Marketplace","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/resolve-incidents-faster-with-insightfinder/insightfinder_hero.png\" width=\"100%\"/>InsightFinder is a SaaS platform that uses AI-backed predictive analytics to predict and prevent production incidents. Using InsightFinder with Datadog, you can quickly identify hidden correlations in your application metrics, logs, and events and address application issues before they devolve into production outages and create customer impact.After you sign up for an InsightFinder trial in the Datadog Marketplace and install the out-of-the-box (OOTB) InsightFinder integration, you can begin sending metrics from Datadog to InsightFinder’s unsupervised ML engine to predict incidents and identify hidden correlations.","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/resolve-incidents-faster-with-insightfinder/","SourceName":"Datadog"}},{"node":{"ID":2680,"Title":"Looking back at 2022 — Elastic year in review","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/looking-back-at-2022-elastic-year-in-review","SourceName":"Elastic"}},{"node":{"ID":2674,"Title":"Blog: Kubernetes v1.26: Alpha support for cross-namespace storage data sources","Description":"<p><strong>Author:</strong> Takafumi Takahashi (Hitachi Vantara)</p>\n<p>Kubernetes v1.26, released last month, introduced an alpha feature that\nlets you specify a data source for a PersistentVolumeClaim, even where the source\ndata belong to a different namespace.\nWith the new feature enabled, you specify a namespace in the <code>dataSourceRef</code> field of\na new PersistentVolumeClaim. Once Kubernetes checks that access is OK, the new\nPersistentVolume can populate its data from the storage source specified in that other\nnamespace.\nBefore Kubernetes v1.26, provided your cluster had the <code>AnyVolumeDataSource</code> feature enabled,\nyou could already provision new volumes from a data source in the <strong>same</strong>\nnamespace.\nHowever, that only worked for the data source in the same namespace,\ntherefore users couldn't provision a PersistentVolume with a claim\nin one namespace from a data source in other namespace.\nTo solve this problem, Kubernetes v1.26 added a new alpha <code>namespace</code> field\nto <code>dataSourceRef</code> field in PersistentVolumeClaim the API.</p>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>Once the csi-provisioner finds that a data source is specified with a <code>dataSourceRef</code> that\nhas a non-empty namespace name,\nit checks all reference grants within the namespace that's specified by the<code>.spec.dataSourceRef.namespace</code>\nfield of the PersistentVolumeClaim, in order to see if access to the data source is allowed.\nIf any ReferenceGrant allows access, the csi-provisioner provisions a volume from the data source.</p>\n<h2 id=\"trying-it-out\">Trying it out</h2>\n<p>The following things are required to use cross namespace volume provisioning:</p>\n<ul>\n<li>Enable the <code>AnyVolumeDataSource</code> and <code>CrossNamespaceVolumeDataSource</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gates</a> for the kube-apiserver and kube-controller-manager</li>\n<li>Install a CRD for the specific <code>VolumeSnapShot</code> controller</li>\n<li>Install the CSI Provisioner controller and enable the <code>CrossNamespaceVolumeDataSource</code> feature gate</li>\n<li>Install the CSI driver</li>\n<li>Install a CRD for ReferenceGrants</li>\n</ul>\n<h2 id=\"putting-it-all-together\">Putting it all together</h2>\n<p>To see how this works, you can install the sample and try it out.\nThis sample do to create PVC in dev namespace from VolumeSnapshot in prod namespace.\nThat is a simple example. For real world use, you might want to use a more complex approach.</p>\n<h3 id=\"example-assumptions\">Assumptions for this example</h3>\n<ul>\n<li>Your Kubernetes cluster was deployed with <code>AnyVolumeDataSource</code> and <code>CrossNamespaceVolumeDataSource</code> feature gates enabled</li>\n<li>There are two namespaces, dev and prod</li>\n<li>CSI driver is being deployed</li>\n<li>There is an existing VolumeSnapshot named <code>new-snapshot-demo</code> in the <em>prod</em> namespace</li>\n<li>The ReferenceGrant CRD (from the Gateway API project) is already deployed</li>\n</ul>\n<h3 id=\"grant-referencegrants-read-permission-to-the-csi-provisioner\">Grant ReferenceGrants read permission to the CSI Provisioner</h3>\n<p>Access to ReferenceGrants is only needed when the CSI driver\nhas the <code>CrossNamespaceVolumeDataSource</code> controller capability.\nFor this example, the external-provisioner needs <strong>get</strong>, <strong>list</strong>, and <strong>watch</strong>\npermissions for <code>referencegrants</code> (API group <code>gateway.networking.k8s.io</code>).</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">apiGroups</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;gateway.networking.k8s.io&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;referencegrants&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">verbs</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;get&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;list&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;watch&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"enable-the-crossnamespacevolumedatasource-feature-gate-for-the-csi-provisioner\">Enable the CrossNamespaceVolumeDataSource feature gate for the CSI Provisioner</h3>\n<p>Add <code>--feature-gates=CrossNamespaceVolumeDataSource=true</code> to the csi-provisioner command line.\nFor example, use this manifest snippet to redefine the container:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">args</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- -v=5<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --csi-address=/csi/csi.sock<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --feature-gates=Topology=true<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --feature-gates=CrossNamespaceVolumeDataSource=true<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>csi-provisioner:latest<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">imagePullPolicy</span>:<span style=\"color:#bbb\"> </span>IfNotPresent<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>csi-provisioner<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"create-a-referencegrant\">Create a ReferenceGrant</h3>\n<p>Here's a manifest for an example ReferenceGrant.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1beta1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ReferenceGrant<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>allow-prod-pvc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>prod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">from</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PersistentVolumeClaim<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">to</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span>snapshot.storage.k8s.io<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>VolumeSnapshot<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>new-snapshot-demo<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"create-a-persistentvolumeclaim-by-using-cross-namespace-data-source\">Create a PersistentVolumeClaim by using cross namespace data source</h3>\n<p>Kubernetes creates a PersistentVolumeClaim on dev and the CSI driver populates\nthe PersistentVolume used on dev from snapshots on prod.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PersistentVolumeClaim<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>example-pvc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">storageClassName</span>:<span style=\"color:#bbb\"> </span>example<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">accessModes</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- ReadWriteOnce<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">storage</span>:<span style=\"color:#bbb\"> </span>1Gi<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">dataSourceRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiGroup</span>:<span style=\"color:#bbb\"> </span>snapshot.storage.k8s.io<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>VolumeSnapshot<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>new-snapshot-demo<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>prod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">volumeMode</span>:<span style=\"color:#bbb\"> </span>Filesystem<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<p>The enhancement proposal,\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3294-provision-volumes-from-cross-namespace-snapshots\">Provision volumes from cross-namespace snapshots</a>, includes lots of detail about the history and technical implementation of this feature.</p>\n<p>Please get involved by joining the <a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special Interest Group (SIG)</a>\nto help us enhance this feature.\nThere are a lot of good ideas already and we'd be thrilled to have more!</p>\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n<p>It takes a wonderful group to make wonderful software.\nSpecial thanks to the following people for the insightful reviews,\nthorough consideration and valuable contribution to the CrossNamespaceVolumeDataSouce feature:</p>\n<ul>\n<li>Michelle Au (msau42)</li>\n<li>Xing Yang (xing-yang)</li>\n<li>Masaki Kimura (mkimuram)</li>\n<li>Tim Hockin (thockin)</li>\n<li>Ben Swartzlander (bswartz)</li>\n<li>Rob Scott (robscott)</li>\n<li>John Griffith (j-griffith)</li>\n<li>Michael Henriksen (mhenriks)</li>\n<li>Mustafa Elbehery (Elbehery)</li>\n</ul>\n<p>It’s been a joy to work with y'all on this.</p>","PublishedAt":"2023-01-02 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/01/02/cross-namespace-data-sources-alpha/","SourceName":"Kubernetes"}},{"node":{"ID":2673,"Title":"The Journey to Machine-Learned Re-ranking","Description":"<p>The Journey to Machine-Learned Re-ranking Search is the most fundamental way users discover what Mercari marketplace has to offer; our users rely on search to find the items they want. This core functionality is powered by a traditional text matching information retrieval system. But recently, we asked ourselves: Is there a reasonable machine-learning based approach [&hellip;]</p>\n","PublishedAt":"2023-01-01 14:24:46+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20230101-the-journey-to-machine-learned-re-ranking/","SourceName":"Mercari"}},{"node":{"ID":2766,"Title":"Datadog 101: SRE Workshop (EMEA)","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/event/sre-workshop-emea/partner/201007_webinar_fieldevent_desktop.png\" width=\"100%\"/>Datadog’s core suite of products is tailored for SREs. Together, they provide a single pane of glass that gives you both a bird’s-eye view of your entire infrastructure and the ability to zoom in on individual processes. <br><br> In this workshop, you will add the Datadog Agent to a containerized web application and use some essential Datadog tools, including: <ul class='dashed'> <li>Integrations</li> <li>Logs</li> <li>Monitors and alerts</li> <li>Application Performance Monitoring (APM)</li> <li>Network Performance Monitoring (NPM)</li> <li>Dashboards</li> </ul> <br><br> By the end of this workshop, you will be able to use these Datadog tools to analyze the past, observe the present, and optimize the future of your application and infrastructure. <br><br> Duration: 2 hours <br><br> Requirements: A modern web browser with WebSockets enabled. <br><br> The session will close with an audience Q&amp;A.","PublishedAt":"2023-01-01 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/event/sre-workshop-emea/","SourceName":"Datadog"}},{"node":{"ID":2921,"Title":"'Intro to AWS Monitoring with Datadog' Workshop","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/event/intro-to-aws-workshop-emea/partner/201007_webinar_fieldevent_desktop.png\" width=\"100%\"/>Datadog’s AWS integration brings you deep visibility into key AWS services like EC2 and Lambda. In this workshop, we will demonstrate how the integration works and how it&rsquo;s configured through a series of hands-on exercises, including installing the integration and installing sub-integrations for specific services, such as AWS Lambda and Amazon RDS. Then you will observe what the integration provides out-of-the-box by touring the resulting metrics, logs, and dashboards in the Datadog app. <br><br> Duration: 2 hours <br><br> Requirements: A modern web browser with WebSockets enabled. <br><br> The session will close with an audience Q&amp;A.","PublishedAt":"2023-01-01 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/event/intro-to-aws-workshop-emea/","SourceName":"Datadog"}},{"node":{"ID":2671,"Title":"The state of HTTP in 2022","Description":"So what happened at all of those working group meetings, specification documents, and side events in 2022? What are implementers and deployers of the web’s protocol doing? And what’s coming next?","PublishedAt":"2022-12-30 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/the-state-of-http-in-2022/","SourceName":"Cloudflare"}},{"node":{"ID":2672,"Title":"You should be reading academic computer science papers","Description":"<p>You read documentation and tutorials to become a better programmer, but if you really want to be cutting-edge, academic research is where it's at.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/30/you-should-be-reading-academic-computer-science-papers/\">You should be reading academic computer science papers</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-30 13:56:06+00:00","OriginURL":"https://stackoverflow.blog/2022/12/30/you-should-be-reading-academic-computer-science-papers/","SourceName":"Stack Overflow"}},{"node":{"ID":2670,"Title":"The Overflow #158: Our top blog posts (part 1)","Description":"<p>Terminal tools, defragmenting a SSD, and prompt engineering.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/30/the-overflow-158-our-top-blog-posts-part-1/\">The Overflow #158: Our top blog posts (part 1)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-30 13:06:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/30/the-overflow-158-our-top-blog-posts-part-1/","SourceName":"Stack Overflow"}},{"node":{"ID":2669,"Title":"Blog: Kubernetes v1.26: Advancements in Kubernetes Traffic Engineering","Description":"<p><strong>Authors:</strong> Andrew Sy Kim (Google)</p>\n<p>Kubernetes v1.26 includes significant advancements in network traffic engineering with the graduation of\ntwo features (Service internal traffic policy support, and EndpointSlice terminating conditions) to GA,\nand a third feature (Proxy terminating endpoints) to beta. The combination of these enhancements aims\nto address short-comings in traffic engineering that people face today, and unlock new capabilities for the future.</p>\n<h2 id=\"traffic-loss-from-load-balancers-during-rolling-updates\">Traffic Loss from Load Balancers During Rolling Updates</h2>\n<p>Prior to Kubernetes v1.26, clusters could experience <a href=\"https://github.com/kubernetes/kubernetes/issues/85643\">loss of traffic</a>\nfrom Service load balancers during rolling updates when setting the <code>externalTrafficPolicy</code> field to <code>Local</code>.\nThere are a lot of moving parts at play here so a quick overview of how Kubernetes manages load balancers might help!</p>\n<p>In Kubernetes, you can create a Service with <code>type: LoadBalancer</code> to expose an application externally with a load balancer.\nThe load balancer implementation varies between clusters and platforms, but the Service provides a generic abstraction\nrepresenting the load balancer that is consistent across all Kubernetes installations.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>my-service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">selector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">app.kubernetes.io/name</span>:<span style=\"color:#bbb\"> </span>my-app<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">ports</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">protocol</span>:<span style=\"color:#bbb\"> </span>TCP<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">80</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">targetPort</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">9376</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">type</span>:<span style=\"color:#bbb\"> </span>LoadBalancer<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Under the hood, Kubernetes allocates a NodePort for the Service, which is then used by kube-proxy to provide a\nnetwork data path from the NodePort to the Pod. A controller will then add all available Nodes in the cluster\nto the load balancer’s backend pool, using the designated NodePort for the Service as the backend target port.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/traffic-engineering-service-load-balancer.png\"\nalt=\"Figure 1: Overview of Service load balancers\"/> <figcaption>\n<p>Figure 1: Overview of Service load balancers</p>\n</figcaption>\n</figure>\n<p>Oftentimes it is beneficial to set <code>externalTrafficPolicy: Local</code> for Services, to avoid extra hops between\nNodes that are not running healthy Pods backing that Service. When using <code>externalTrafficPolicy: Local</code>,\nan additional NodePort is allocated for health checking purposes, such that Nodes that do not contain healthy\nPods are excluded from the backend pool for a load balancer.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/traffic-engineering-lb-healthy.png\"\nalt=\"Figure 2: Load balancer traffic to a healthy Node, when externalTrafficPolicy is Local\"/> <figcaption>\n<p>Figure 2: Load balancer traffic to a healthy Node, when externalTrafficPolicy is Local</p>\n</figcaption>\n</figure>\n<p>One such scenario where traffic can be lost is when a Node loses all Pods for a Service,\nbut the external load balancer has not probed the health check NodePort yet. The likelihood of this situation\nis largely dependent on the health checking interval configured on the load balancer. The larger the interval,\nthe more likely this will happen, since the load balancer will continue to send traffic to a node\neven after kube-proxy has removed forwarding rules for that Service. This also occurrs when Pods start terminating\nduring rolling updates. Since Kubernetes does not consider terminating Pods as “Ready”, traffic can be loss\nwhen there are only terminating Pods on any given Node during a rolling update.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/traffic-engineering-lb-without-proxy-terminating-endpoints.png\"\nalt=\"Figure 3: Load balancer traffic to terminating endpoints, when externalTrafficPolicy is Local\"/> <figcaption>\n<p>Figure 3: Load balancer traffic to terminating endpoints, when externalTrafficPolicy is Local</p>\n</figcaption>\n</figure>\n<p>Starting in Kubernetes v1.26, kube-proxy enables the <code>ProxyTerminatingEndpoints</code> feature by default, which\nadds automatic failover and routing to terminating endpoints in scenarios where the traffic would otherwise\nbe dropped. More specifically, when there is a rolling update and a Node only contains terminating Pods,\nkube-proxy will route traffic to the terminating Pods based on their readiness. In addition, kube-proxy will\nactively fail the health check NodePort if there are only terminating Pods available. By doing so,\nkube-proxy alerts the external load balancer that new connections should not be sent to that Node but will\ngracefully handle requests for existing connections.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/traffic-engineering-lb-with-proxy-terminating-endpoints.png\"\nalt=\"Figure 4: Load Balancer traffic to terminating endpoints with ProxyTerminatingEndpoints enabled, when externalTrafficPolicy is Local\"/> <figcaption>\n<p>Figure 4: Load Balancer traffic to terminating endpoints with ProxyTerminatingEndpoints enabled, when externalTrafficPolicy is Local</p>\n</figcaption>\n</figure>\n<h3 id=\"endpointslice-conditions\">EndpointSlice Conditions</h3>\n<p>In order to support this new capability in kube-proxy, the EndpointSlice API introduced new conditions for endpoints:\n<code>serving</code> and <code>terminating</code>.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/endpointslice-overview.png\"\nalt=\"Figure 5: Overview of EndpointSlice conditions\"/> <figcaption>\n<p>Figure 5: Overview of EndpointSlice conditions</p>\n</figcaption>\n</figure>\n<p>The <code>serving</code> condition is semantically identical to <code>ready</code>, except that it can be <code>true</code> or <code>false</code>\nwhile a Pod is terminating, unlike <code>ready</code> which will always be <code>false</code> for terminating Pods for compatibility reasons.\nThe <code>terminating</code> condition is true for Pods undergoing termination (non-empty deletionTimestamp), false otherwise.</p>\n<p>The addition of these two conditions enables consumers of this API to understand Pod states that were previously not possible.\nFor example, we can now track &quot;ready&quot; and &quot;not ready&quot; Pods that are also terminating.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/endpointslice-with-terminating-pod.png\"\nalt=\"Figure 6: EndpointSlice conditions with a terminating Pod\"/> <figcaption>\n<p>Figure 6: EndpointSlice conditions with a terminating Pod</p>\n</figcaption>\n</figure>\n<p>Consumers of the EndpointSlice API, such as Kube-proxy and Ingress Controllers, can now use these conditions to coordinate connection draining\nevents, by continuing to forward traffic for existing connections but rerouting new connections to other non-terminating endpoints.</p>\n<h2 id=\"optimizing-internal-node-local-traffic\">Optimizing Internal Node-Local Traffic</h2>\n<p>Similar to how Services can set <code>externalTrafficPolicy: Local</code> to avoid extra hops for externally sourced traffic, Kubernetes\nnow supports <code>internalTrafficPolicy: Local</code>, to enable the same optimization for traffic originating within the cluster, specifically\nfor traffic using the Service Cluster IP as the destination address. This feature graduated to Beta in Kubernetes v1.24 and is graduating to GA in v1.26.</p>\n<p>Services default the <code>internalTrafficPolicy</code> field to <code>Cluster</code>, where traffic is randomly distributed to all endpoints.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/service-internal-traffic-policy-cluster.png\"\nalt=\"Figure 7: Service routing when internalTrafficPolicy is Cluster\"/> <figcaption>\n<p>Figure 7: Service routing when internalTrafficPolicy is Cluster</p>\n</figcaption>\n</figure>\n<p>When <code>internalTrafficPolicy</code> is set to <code>Local</code>, kube-proxy will forward internal traffic for a Service only if there is an available endpoint\nthat is local to the same Node.</p>\n<figure>\n<img src=\"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/service-internal-traffic-policy-local.png\"\nalt=\"Figure 8: Service routing when internalTrafficPolicy is Local\"/> <figcaption>\n<p>Figure 8: Service routing when internalTrafficPolicy is Local</p>\n</figcaption>\n</figure>\n<div class=\"alert alert-warning caution callout\" role=\"alert\">\n<strong>Caution:</strong> When using <code>internalTrafficPoliy: Local</code>, traffic will be dropped by kube-proxy when no local endpoints are available.\n</div>\n<h2 id=\"getting-involved\">Getting Involved</h2>\n<p>If you're interested in future discussions on Kubernetes traffic engineering, you can get involved in SIG Network through the following ways:</p>\n<ul>\n<li>Slack: <a href=\"https://kubernetes.slack.com/messages/sig-network\">#sig-network</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/kubernetes-sig-network\">Mailing list</a></li>\n<li><a href=\"https://github.com/kubernetes/community/labels/sig%2Fnetwork\">Open Community Issues/PRs</a></li>\n<li><a href=\"https://github.com/kubernetes/community/tree/master/sig-network#meetings\">Biweekly meetings</a></li>\n</ul>","PublishedAt":"2022-12-30 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/30/advancements-in-kubernetes-traffic-engineering/","SourceName":"Kubernetes"}},{"node":{"ID":2666,"Title":"You should be using HTTP Strict Transport Security (HSTS) headers in your Node.js server","Description":"Take an in-depth look at HTTP Strict Transport Security (HSTS) headers to discover how they affect web security and why we should use them on Node.js. Then, learn how to enable HSTS inside a Node.js server.","PublishedAt":"2022-12-29 15:35:59+00:00","OriginURL":"https://snyk.io/blog/http-strict-transport-security-hsts-headers-node-js/","SourceName":"Snyk"}},{"node":{"ID":2665,"Title":"Remote work is killing big offices. Cities must change to survive","Description":"<p>If your office is where you live now, would you live in your old office?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/29/remote-work-is-killing-big-offices-cities-must-change-to-survive/\">Remote work is killing big offices. Cities must change to survive</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-29 14:06:20+00:00","OriginURL":"https://stackoverflow.blog/2022/12/29/remote-work-is-killing-big-offices-cities-must-change-to-survive/","SourceName":"Stack Overflow"}},{"node":{"ID":2664,"Title":"Blog: Kubernetes 1.26: Job Tracking, to Support Massively Parallel Batch Workloads, Is Generally Available","Description":"<p><strong>Authors:</strong> Aldo Culquicondor (Google)</p>\n<p>The Kubernetes 1.26 release includes a stable implementation of the <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/\">Job</a>\ncontroller that can reliably track a large amount of Jobs with high levels of\nparallelism. <a href=\"https://github.com/kubernetes/community/tree/master/sig-apps\">SIG Apps</a>\nand <a href=\"https://github.com/kubernetes/community/tree/master/wg-batch\">WG Batch</a>\nhave worked on this foundational improvement since Kubernetes 1.22. After\nmultiple iterations and scale verifications, this is now the default\nimplementation of the Job controller.</p>\n<p>Paired with the Indexed <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#completion-mode\">completion mode</a>,\nthe Job controller can handle massively parallel batch Jobs, supporting up to\n100k concurrent Pods.</p>\n<p>The new implementation also made possible the development of <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-failure-policy\">Pod failure policy</a>,\nwhich is in beta in the 1.26 release.</p>\n<h2 id=\"how-do-i-use-this-feature\">How do I use this feature?</h2>\n<p>To use Job tracking with finalizers, upgrade to Kubernetes 1.25 or newer and\ncreate new Jobs. You can also use this feature in v1.23 and v1.24, if you have the\nability to enable the <code>JobTrackingWithFinalizers</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a>.</p>\n<p>If your cluster runs Kubernetes 1.26, Job tracking with finalizers is a stable\nfeature. For v1.25, it's behind that feature gate, and your cluster administrators may have\nexplicitly disabled it - for example, if you have a policy of not using\nbeta features.</p>\n<p>Jobs created before the upgrade will still be tracked using the legacy behavior.\nThis is to avoid retroactively adding finalizers to running Pods, which might\nintroduce race conditions.</p>\n<p>For maximum performance on large Jobs, the Kubernetes project recommends\nusing the <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#completion-mode\">Indexed completion mode</a>.\nIn this mode, the control plane is able to track Job progress with less API\ncalls.</p>\n<p>If you are a developer of operator(s) for batch, <a href=\"https://en.wikipedia.org/wiki/High-performance_computing\">HPC</a>,\n<a href=\"https://en.wikipedia.org/wiki/Artificial_intelligence\">AI</a>, <a href=\"https://en.wikipedia.org/wiki/Machine_learning\">ML</a>\nor related workloads, we encourage you to use the Job API to delegate accurate\nprogress tracking to Kubernetes. If there is something missing in the Job API\nthat forces you to manage plain Pods, the <a href=\"https://github.com/kubernetes/community/tree/master/wg-batch\">Working Group Batch</a>\nwelcomes your feedback and contributions.</p>\n<h3 id=\"deprecation-notices\">Deprecation notices</h3>\n<p>During the development of the feature, the control plane added the annotation\n<a href=\"https://kubernetes.io/docs/reference/labels-annotations-taints/#batch-kubernetes-io-job-tracking\"><code>batch.kubernetes.io/job-tracking</code></a>\nto the Jobs that were created when the feature was enabled.\nThis allowed a safe transition for older Jobs, but it was never meant to stay.</p>\n<p>In the 1.26 release, we deprecated the annotation <code>batch.kubernetes.io/job-tracking</code>\nand the control plane will stop adding it in Kubernetes 1.27.\nAlong with that change, we will remove the legacy Job tracking implementation.\nAs a result, the Job controller will track all Jobs using finalizers and it will\nignore Pods that don't have the aforementioned finalizer.</p>\n<p>Before you upgrade your cluster to 1.27, we recommend that you verify that there\nare no running Jobs that don't have the annotation, or you wait for those jobs\nto complete.\nOtherwise, you might observe the control plane recreating some Pods.\nWe expect that this shouldn't affect any users, as the feature is enabled by\ndefault since Kubernetes 1.25, giving enough buffer for old jobs to complete.</p>\n<h2 id=\"what-problem-does-the-new-implementation-solve\">What problem does the new implementation solve?</h2>\n<p>Generally, Kubernetes workload controllers, such as ReplicaSet or StatefulSet,\nrely on the existence of Pods or other objects in the API to determine the\nstatus of the workload and whether replacements are needed.\nFor example, if a Pod that belonged to a ReplicaSet terminates or ceases to\nexist, the ReplicaSet controller needs to create a replacement Pod to satisfy\nthe desired number of replicas (<code>.spec.replicas</code>).</p>\n<p>Since its inception, the Job controller also relied on the existence of Pods in\nthe API to track Job status. A Job has <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#completion-mode\">completion</a>\nand <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures\">failure handling</a>\npolicies, requiring the end state of a finished Pod to determine whether to\ncreate a replacement Pod or mark the Job as completed or failed. As a result,\nthe Job controller depended on Pods, even terminated ones, to remain in the API\nin order to keep track of the status.</p>\n<p>This dependency made the tracking of Job status unreliable, because Pods can be\ndeleted from the API for a number of reasons, including:</p>\n<ul>\n<li>The garbage collector removing orphan Pods when a Node goes down.</li>\n<li>The garbage collector removing terminated Pods when they reach a threshold.</li>\n<li>The Kubernetes scheduler preempting a Pod to accomodate higher priority Pods.</li>\n<li>The taint manager evicting a Pod that doesn't tolerate a <code>NoExecute</code> taint.</li>\n<li>External controllers, not included as part of Kubernetes, or humans deleting\nPods.</li>\n</ul>\n<h3 id=\"the-new-implementation\">The new implementation</h3>\n<p>When a controller needs to take an action on objects before they are removed, it\nshould add a <a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/\">finalizer</a>\nto the objects that it manages.\nA finalizer prevents the objects from being deleted from the API until the\nfinalizers are removed. Once the controller is done with the cleanup and\naccounting for the deleted object, it can remove the finalizer from the object and the\ncontrol plane removes the object from the API.</p>\n<p>This is what the new Job controller is doing: adding a finalizer during Pod\ncreation, and removing the finalizer after the Pod has terminated and has been\naccounted for in the Job status. However, it wasn't that simple.</p>\n<p>The main challenge is that there are at least two objects involved: the Pod\nand the Job. While the finalizer lives in the Pod object, the accounting lives\nin the Job object. There is no mechanism to atomically remove the finalizer in\nthe Pod and update the counters in the Job status. Additionally, there could be\nmore than one terminated Pod at a given time.</p>\n<p>To solve this problem, we implemented a three staged approach, each translating\nto an API call.</p>\n<ol>\n<li>For each terminated Pod, add the unique ID (UID) of the Pod into short-lived\nlists stored in the <code>.status</code> of the owning Job\n(<a href=\"https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/job-v1/#JobStatus\">.status.uncountedTerminatedPods</a>).</li>\n<li>Remove the finalizer from the Pods(s).</li>\n<li>Atomically do the following operations:\n<ul>\n<li>remove UIDs from the short-lived lists</li>\n<li>increment the overall <code>succeeded</code> and <code>failed</code> counters in the <code>status</code> of\nthe Job.</li>\n</ul>\n</li>\n</ol>\n<p>Additional complications come from the fact that the Job controller might\nreceive the results of the API changes in steps 1 and 2 out of order. We solved\nthis by adding an in-memory cache for removed finalizers.</p>\n<p>Still, we faced some issues during the beta stage, leaving some pods stuck\nwith finalizers in some conditions (<a href=\"https://github.com/kubernetes/kubernetes/issues/108645\">#108645</a>,\n<a href=\"https://github.com/kubernetes/kubernetes/issues/109485\">#109485</a>, and\n<a href=\"https://github.com/kubernetes/kubernetes/pull/111646\">#111646</a>). As a result,\nwe decided to switch that feature gate to be disabled by default for the 1.23\nand 1.24 releases.</p>\n<p>Once resolved, we re-enabled the feature for the 1.25 release. Since then, we\nhave received reports from our customers running tens of thousands of Pods at a\ntime in their clusters through the Job API. Seeing this success, we decided to\ngraduate the feature to stable in 1.26, as part of our long term commitment to\nmake the Job API the best way to run large batch Jobs in a Kubernetes cluster.</p>\n<p>To learn more about the feature, you can read the <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/2307-job-tracking-without-lingering-pods\">KEP</a>.</p>\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n<p>As with any Kubernetes feature, multiple people contributed to getting this\ndone, from testing and filing bugs to reviewing code.</p>\n<p>On behalf of SIG Apps, I would like to especially thank Jordan Liggitt (Google)\nfor helping me debug and brainstorm solutions for more than one race condition\nand Maciej Szulik (Red Hat) for his thorough reviews.</p>","PublishedAt":"2022-12-29 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/29/scalable-job-tracking-ga/","SourceName":"Kubernetes"}},{"node":{"ID":2668,"Title":"Datadog Spotlight: Cansu Berkem","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/pup-culture/datadog-spotlight-cansu-berkem/employee_spotlight_cansu.png\" width=\"100%\"/>We’re excited to introduce Cansu Berkem, a Group Product Manager based in New York City, for this month’s Datadog Spotlight. As a Group Product Manager, Cansu leads a team of Product Managers (PMs) and covers multiple product areas, such as Incident Management, Cloudcraft, Mobile Applications, and collaboration integrations. We spoke with Cansu to discuss her journey with Datadog, some of the exciting things she’s worked on this year, and the culture of the Product Management team.","PublishedAt":"2022-12-29 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/pup-culture/datadog-spotlight-cansu-berkem/","SourceName":"Datadog"}}]}},"pageContext":{"limit":30,"skip":2010,"numPages":158,"currentPage":68}},"staticQueryHashes":["3649515864"]}